{"ast":null,"code":"import _slicedToArray from\"/Users/ktu/Documents/KayToo2022.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import axios from\"axios\";import rs from\"random-seed\";import words1 from\"./files/shuffled_real_wordles.txt\";import words2 from\"./files/combined_wordlist.txt\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getWindowDimensions(){var _window=window,width=_window.innerWidth,height=_window.innerHeight;return{width:width,height:height};}function Wordle(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),devTools=_useState2[0],toggleDev=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),hardReset=_useState4[0],toggleHardReset=_useState4[1];var _useState5=useState(getWindowDimensions()),_useState6=_slicedToArray(_useState5,2),windowDimensions=_useState6[0],setWindowDimensions=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentWord=_useState8[0],setWord=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),currentGuess=_useState10[0],setGuess=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),guessCount=_useState12[0],setCount=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),guessHistory=_useState14[0],setHistory=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),win=_useState16[0],setWin=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),rightLetters=_useState18[0],setRight=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),missedLetters=_useState20[0],setMissed=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),wrongLetters=_useState22[0],setWrong=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),winCount=_useState24[0],setWinCount=_useState24[1];var _useState25=useState(0),_useState26=_slicedToArray(_useState25,2),winStreak=_useState26[0],setWinStreak=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),wordBank=_useState28[0],setWordBank=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),guessBank=_useState30[0],setGuessBank=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),showWord=_useState32[0],toggleShowWord=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),showIssue=_useState34[0],toggleIssue=_useState34[1];var _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),started=_useState36[0],toggleStarted=_useState36[1];var _useState37=useState(0),_useState38=_slicedToArray(_useState37,2),startTime=_useState38[0],setStartTime=_useState38[1];var _useState39=useState(0),_useState40=_slicedToArray(_useState39,2),endTime=_useState40[0],setEndTime=_useState40[1];var _useState41=useState(0),_useState42=_slicedToArray(_useState41,2),totalTime=_useState42[0],setTotalTime=_useState42[1];var _useState43=useState(\"\"),_useState44=_slicedToArray(_useState43,2),issue=_useState44[0],setIssue=_useState44[1];var _useState45=useState(0),_useState46=_slicedToArray(_useState45,2),seed=_useState46[0],setSeed=_useState46[1];var gen=require('random-seed');var _useState47=useState(0),_useState48=_slicedToArray(_useState47,2),wordSeed=_useState48[0],setWordSeed=_useState48[1];var _useState49=useState(0),_useState50=_slicedToArray(_useState49,2),tempSeed=_useState50[0],submitSeed=_useState50[1];var kbTop=['q','w','e','r','t','y','u','i','o','p'];var kbMid=['a','s','d','f','g','h','j','k','l'];var kbBot=['z','x','c','v','b','n','m'];useEffect(function(){if(document.cookie.split(\";\").some(function(item){return item.trim().startsWith(\"k2wsr=\");})){var cookieData=document.cookie.split('; ').find(function(row){return row.startsWith('k2wsr=');}).split('=')[1].split(',');setWinCount(parseInt(cookieData[0]));setWinStreak(parseInt(cookieData[1]));}else{document.cookie=\"k2wsr=0,0\";}fetch(words1).then(function(r){return r.text();}).then(function(text){setWordBank(text.split('\\n'));});fetch(words2).then(function(r){return r.text();}).then(function(text){setGuessBank(text.split('\\n'));});function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[]);useEffect(function(){setSeed(Math.floor(Math.random()*10000));// generateWord()\n},[wordBank]);useEffect(function(){var randGen=gen(seed);setWordSeed(randGen.range(wordBank.length));},[seed]);useEffect(function(){generateWord();},[wordSeed]);useEffect(function(){if(winCount!=0){document.cookie=\"k2wsr=\".concat(winCount,\",\").concat(winStreak);}},[winCount,winStreak]);useEffect(function(){if(started){var st=Date.now();setStartTime(st);}else{var et=Date.now();setStartTime(et);}},[started]);useEffect(function(){if(endTime>startTime&&win){console.log(endTime-startTime);setTotalTime(endTime-startTime);}},[endTime]);var generateWord=function generateWord(){var rand=wordSeed;var word=wordBank[wordSeed];//var word = wordBank[Math.floor(Math.random() * wordBank.length)]\nsetWord(word);};var resetGame=function resetGame(){generateWord();setCount(0);setHistory([]);setWin(false);setGuess(\"\");setRight([]);setWrong([]);setMissed([]);toggleShowWord(false);setSeed(Math.floor(Math.random()*10000));};var submitGuess=function submitGuess(guess){if(!guess||guess.length!=5){setIssue(\"Guess must be 5 letters\");toggleIssue(true);console.log(\"Guess must be 5 letters\");}else if(guessBank.indexOf(guess)<0){setIssue(\"Not a valid word\");toggleIssue(true);console.log(\"Not a word\");}else{setCount(guessCount+1);var ret=[];var didWin=true;for(var i in guess){var val=-1;if(guess[i]==currentWord[i]){val=1;}else if(currentWord.indexOf(guess[i])>=0){val=0;}if(val!=1){didWin=false;}if(val==1){var tempRight=rightLetters;tempRight.push(guess[i]);setRight(tempRight);}if(val==0){var tempMissed=missedLetters;tempMissed.push(guess[i]);setMissed(tempMissed);}if(val==-1){var tempWrong=wrongLetters;tempWrong.push(guess[i]);setWrong(tempWrong);}ret.push([guess[i],val]);}setWin(didWin);var tempHist=guessHistory;tempHist.push(ret);setHistory(tempHist);setGuess(\"\");if(didWin){setWinCount(winCount+1);setWinStreak(winStreak+1);toggleStarted(false);setEndTime(Date.now());// resetGame()\n}if(!didWin&&guessCount>=5){setWinStreak(0);toggleShowWord(true);toggleStarted(false);setEndTime(Date.now());// resetGame()\n}}return ret;};var renderGuesses=function renderGuesses(){if(guessHistory.length==0){return[];}var guesses=guessHistory.map(function(g){return/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",marginBottom:\"2px\"},children:renderGuess(g)});});// for (var i = 0; i < 6 - guesses.length; i++) {\n//     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n// }\nreturn guesses;};var renderGuess=function renderGuess(i){var c=i.map(function(c){return c[1]==0?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):c[1]==1?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):c[1]==-1?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):/*#__PURE__*/_jsx(\"div\",{children:\"error\"});});return/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:c});};var renderCurrent=function renderCurrent(){if(currentGuess==\"\"){// have this be a bar with character height\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})})]});}var r=currentGuess.split('').map(function(c){return/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})});});var filler=5-r.length;for(var i=0;i<filler;i++){r.push(/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}));}return/*#__PURE__*/_jsx(\"div\",{children:r});};var renderKeyBoard=function renderKeyBoard(){var t=kbTop.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var m=kbMid.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var b=kbBot.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:t}),/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:m}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexbox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",width:\"auto\"},onClick:function onClick(){toggleIssue(false);if(guessCount<=5&&win==false){submitGuess(currentGuess.toLowerCase());}else{resetGame();}},children:\"Enter\"}),b,/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",width:\"auto\"},onClick:function onClick(){toggleIssue(false);setGuess(currentGuess.substr(0,currentGuess.length-1));},children:\"Delete\"})]})]});};var renderWorkspace=function renderWorkspace(){var guessesTaken=renderGuesses().length;var rowsLeft=5-guessesTaken;var rows=[];for(var i=0;i<rowsLeft;i++){rows.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})})]}));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:renderGuesses()}),guessCount<6?/*#__PURE__*/_jsx(\"div\",{children:renderCurrent()}):null,/*#__PURE__*/_jsx(\"div\",{children:rows})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"testLanding\",style:{height:\"auto\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",maxWidth:\"750px\"},children:[devTools==3?/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){toggleHardReset(hardReset+1);if(hardReset==2){document.cookie=\"k2wsr=0,0\";setWinCount(parseInt(0));setWinStreak(parseInt(0));toggleHardReset(0);}},style:{position:\"absolute\",backgroundColor:\"red\",top:\"0px\",right:\"0px\"},children:[\"w: \",windowDimensions.width,\", h: \",windowDimensions.height]}):null,devTools==3?/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:\"0px\",left:\"0px\"},children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){if(!isNaN(e.target.value)){submitSeed(parseInt(e.target.value));}else{console.log(\"invalid\");}}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setSeed(tempSeed);toggleDev(0);submitSeed(0);},children:\"Set Seed\"})]}):null,\"Wordle sim\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Wins: \",winCount,\", Winstreak: \",winStreak]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderWorkspace()}),win?/*#__PURE__*/_jsxs(\"div\",{children:[totalTime/1000,\"s, Seed: \",seed]}):showWord||devTools==3?/*#__PURE__*/_jsxs(\"div\",{children:[currentWord,\", Seed: \",seed]}):showIssue?/*#__PURE__*/_jsx(\"div\",{children:issue}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexbox\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"ctButton\",style:{marginLeft:\"5%\",marginRight:\"5%\",marginTop:\"0\",float:\"left\",border:\"none\",backgroundColor:\"white\",color:\"black\",padding:\"12px\",width:\"30%\",justifyContent:\"center\"},value:currentGuess,onChange:function onChange(e){toggleIssue(false);if(!started){toggleStarted(true);}if(win||guessCount>=6){resetGame();}var temp=e.target.value.substr(0,5);setGuess(temp);},onKeyPress:function onKeyPress(e){if(e.key==='Enter'){if(win||guessCount>=6){resetGame();}submitGuess(currentGuess.toLowerCase());}}}),win?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){resetGame();},className:\"wordleButton\",style:{padding:\"11px\",marginRight:\"5%\",width:\"60%\"},children:\"Continue\"}):/*#__PURE__*/_jsxs(\"div\",{style:{display:\"inline\",marginRight:\"5%\",width:\"60%\"},children:[/*#__PURE__*/_jsx(\"button\",{className:\"wordleButton\",style:{padding:\"11px\",width:\"40%\",marginRight:\"5%\"},onClick:function onClick(){if(guessCount<=5&&win==false){submitGuess(currentGuess.toLowerCase());}else{resetGame();}},children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if(guessCount==0){if(devTools==3){toggleDev(0);}else{toggleDev(devTools+1);}}else{toggleDev(0);}resetGame();if(!win){setWinStreak(0);}},className:\"wordleReset\",style:{padding:\"11px\",width:\"40%\"},children:\"Reset\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderKeyBoard()}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"wordleButton\",children:\"Return to the main page\"})}),/*#__PURE__*/_jsx(\"br\",{})]})});}export default Wordle;","map":{"version":3,"sources":["/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js"],"names":["useEffect","useState","axios","rs","words1","words2","getWindowDimensions","window","width","innerWidth","height","innerHeight","Wordle","devTools","toggleDev","hardReset","toggleHardReset","windowDimensions","setWindowDimensions","currentWord","setWord","currentGuess","setGuess","guessCount","setCount","guessHistory","setHistory","win","setWin","rightLetters","setRight","missedLetters","setMissed","wrongLetters","setWrong","winCount","setWinCount","winStreak","setWinStreak","wordBank","setWordBank","guessBank","setGuessBank","showWord","toggleShowWord","showIssue","toggleIssue","started","toggleStarted","startTime","setStartTime","endTime","setEndTime","totalTime","setTotalTime","issue","setIssue","seed","setSeed","gen","require","wordSeed","setWordSeed","tempSeed","submitSeed","kbTop","kbMid","kbBot","document","cookie","split","some","item","trim","startsWith","cookieData","find","row","parseInt","fetch","then","r","text","handleResize","addEventListener","removeEventListener","Math","floor","random","randGen","range","length","generateWord","st","Date","now","et","console","log","rand","word","resetGame","submitGuess","guess","indexOf","ret","didWin","i","val","tempRight","push","tempMissed","tempWrong","tempHist","renderGuesses","guesses","map","g","marginBottom","renderGuess","c","backgroundColor","display","padding","margin","fontWeight","borderColor","toUpperCase","renderCurrent","filler","renderKeyBoard","t","k","m","b","toLowerCase","substr","renderWorkspace","guessesTaken","rowsLeft","rows","maxWidth","position","top","right","left","e","isNaN","target","value","marginLeft","marginRight","marginTop","float","border","color","justifyContent","temp","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport rs from \"random-seed\"\nimport words1 from \"./files/shuffled_real_wordles.txt\"\nimport words2 from \"./files/combined_wordlist.txt\"\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Wordle() {\n\n    const [devTools, toggleDev] = useState(0);\n    const [hardReset, toggleHardReset] = useState(0);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [currentWord, setWord] = useState(\"\");\n    const [currentGuess, setGuess] = useState(\"\");\n    const [guessCount, setCount] = useState(0);\n    const [guessHistory, setHistory] = useState([]);\n    const [win, setWin] = useState(false);\n    \n\n    const [rightLetters, setRight] = useState([]);\n    const [missedLetters, setMissed] = useState([]);\n    const [wrongLetters, setWrong] = useState([]);\n\n    const [winCount, setWinCount] = useState(0);\n    const [winStreak, setWinStreak] = useState(0);\n\n    const [wordBank, setWordBank] = useState([]);\n    const [guessBank, setGuessBank] = useState([]);\n\n    const [showWord, toggleShowWord] = useState(false);\n    const [showIssue, toggleIssue] = useState(false);\n\n    const [started, toggleStarted] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [totalTime, setTotalTime] = useState(0);\n\n    const [issue, setIssue] = useState(\"\")\n\n    const [seed, setSeed] = useState(0)\n\n    var gen = require('random-seed')\n\n    const [wordSeed, setWordSeed] = useState(0)\n    const [tempSeed, submitSeed] = useState(0)\n\n    \n\n    const kbTop = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p']\n    const kbMid = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l']\n    const kbBot = ['z', 'x', 'c', 'v', 'b', 'n', 'm'] \n\n    useEffect(() => {\n        if (document.cookie\n                .split(\";\")\n                .some(item => item.trim().startsWith(\"k2wsr=\"))) {\n                    var cookieData = document.cookie.split('; ').find(row => row.startsWith('k2wsr=')).split('=')[1].split(',')\n                    setWinCount(parseInt(cookieData[0]))\n                    setWinStreak(parseInt(cookieData[1]))\n        } else {\n            document.cookie= \"k2wsr=0,0\"\n        }\n        \n        fetch(words1)\n            .then(r => r.text())\n            .then(text => {\n                setWordBank(text.split('\\n'))\n            })\n\n        fetch(words2)\n            .then(r => r.text())\n            .then(text => {\n                setGuessBank(text.split('\\n'))\n            })\n        \n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 10000))\n        // generateWord()\n    }, [wordBank])\n\n    useEffect(() => {\n\n        var randGen = gen(seed);\n        setWordSeed(randGen.range(wordBank.length))\n    }, [seed])\n\n    useEffect(() => {\n        generateWord()\n    }, [wordSeed])\n\n    useEffect(() => {\n        if (winCount != 0) {\n            document.cookie = `k2wsr=${winCount},${winStreak}`\n        }\n        \n    }, [winCount, winStreak]) \n\n    useEffect(() => {\n        if (started) {\n            var st = Date.now()\n            setStartTime(st)\n        } else {\n            var et = Date.now()\n            setStartTime(et)\n        }\n        \n    }, [started])\n\n    useEffect(() => {\n        if (endTime > startTime && win) {\n            console.log(endTime - startTime)\n            setTotalTime(endTime-startTime)\n        }\n    }, [endTime])\n\n    const generateWord = () => {\n        var rand = wordSeed\n        var word = wordBank[wordSeed]\n        //var word = wordBank[Math.floor(Math.random() * wordBank.length)]\n        setWord(word)\n    }\n\n    const resetGame = () => {\n        generateWord()\n        setCount(0)\n        setHistory([])\n        setWin(false)\n        setGuess(\"\")\n        setRight([])\n        setWrong([])\n        setMissed([])\n        toggleShowWord(false)\n        setSeed(Math.floor(Math.random() * 10000))\n    }\n\n    const submitGuess = (guess) => {\n        if (!guess || guess.length != 5) {\n            setIssue(\"Guess must be 5 letters\")\n            toggleIssue(true)\n            console.log(\"Guess must be 5 letters\")\n        } else if (guessBank.indexOf(guess) < 0){\n            setIssue(\"Not a valid word\")\n            toggleIssue(true)\n            console.log(\"Not a word\")\n        } else {\n            setCount(guessCount + 1)\n            var ret = []\n            var didWin = true;\n\n            for (var i in guess) {\n                var val = -1\n                \n                if (guess[i] == currentWord[i]) {\n                    val = 1\n                } else if (currentWord.indexOf(guess[i]) >= 0) {\n                    val = 0\n                }\n\n                if (val != 1) {\n                    didWin = false\n                }\n\n                if (val == 1) {\n                    var tempRight = rightLetters\n                    tempRight.push(guess[i])\n                    setRight(tempRight)\n                }\n\n                if (val == 0) {\n                    var tempMissed = missedLetters\n                    tempMissed.push(guess[i])\n                    setMissed(tempMissed)\n                }\n\n                if (val == -1) {\n                    var tempWrong = wrongLetters\n                    tempWrong.push(guess[i])\n                    setWrong(tempWrong)\n                }\n                ret.push([guess[i], val])\n            }\n            \n\n            \n\n            setWin(didWin)\n            var tempHist = guessHistory\n            tempHist.push(ret)\n            setHistory(tempHist)\n            setGuess(\"\")\n            if (didWin) {\n                setWinCount(winCount + 1)\n                setWinStreak(winStreak + 1)\n                toggleStarted(false)\n                setEndTime(Date.now())\n                \n                // resetGame()\n            }\n            if (!didWin && guessCount >= 5) {\n                setWinStreak(0)\n                toggleShowWord(true)\n                toggleStarted(false)\n                setEndTime(Date.now())\n                \n                // resetGame()\n            }\n            \n        }\n        return ret\n    }\n\n    const renderGuesses = () => {\n        if (guessHistory.length == 0) {\n            return []\n        }\n\n        const guesses = guessHistory.map((g) => (\n            <div style={{width: \"100%\", marginBottom: \"2px\"}}>\n                {renderGuess(g)}\n            </div>\n        ))\n\n        // for (var i = 0; i < 6 - guesses.length; i++) {\n        //     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n        // }\n        return guesses\n    }\n\n    const renderGuess = (i) => {\n        const c = i.map((c) => (\n            (c[1] == 0) ? (\n                <div className=\"square\" style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}>\n                    <div className=\"content\">\n                        {c[0].toUpperCase()}\n                    </div>    \n                </div>\n            ) : (\n                (c[1] == 1) ? (\n                    <div className=\"square\"  style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>\n                    </div>\n                ) : (\n                    (c[1] == -1) ? (\n                        <div className=\"square\"  style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                            <div className=\"content\">\n                                {c[0].toUpperCase()}\n                            </div>\n                        </div>\n                    ) : (<div>error</div>)\n                )\n            )   \n        ))\n        return (\n            <div className=\"flexbox\">\n                {c}\n            </div>\n        )\n    }\n\n    const renderCurrent = () => {\n        if (currentGuess == \"\") {\n            // have this be a bar with character height\n            return (\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        const r = currentGuess.split('').map((c) => (\n            <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>    \n                    </div>\n\n        ))\n\n        var filler = 5 - r.length\n\n        for (var i = 0; i < filler; i++) {\n            r.push(\n                <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                    <div className=\"content\">\n                        \n                    </div>    \n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {r}\n            </div>\n        )\n    }\n\n    const renderKeyBoard = () => {\n        const t = kbTop.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const m = kbMid.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const b = kbBot.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        return (\n            <div>\n                <div className=\"flexbox\">{t}</div>\n                <div className=\"flexbox\">{m}</div>\n                {/* add the backspace and enter keys in bottom row */}\n                <div className=\"flexbox\">\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (guessCount <= 5 && win == false) {\n                                submitGuess(currentGuess.toLowerCase())\n                                \n                            } else {\n                                resetGame()\n                            }\n                        }}  \n                    >\n                        Enter\n                    </div>\n                    {b}\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            setGuess(currentGuess.substr(0,currentGuess.length -1 ))\n                        }}  \n                    >\n                        Delete\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const renderWorkspace = () => {\n        var guessesTaken = renderGuesses().length\n        var rowsLeft = 5 - guessesTaken\n\n        var rows = []\n\n        for (var i = 0; i < rowsLeft; i++) {\n            rows.push(\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div>\n                    {renderGuesses()}\n                </div>\n                {/* <div style={{display: \"block\", width: \"100%\", height: \"3px\"}}/> */}\n                {(guessCount < 6) ? (\n                    <div>\n                        {renderCurrent()}\n                    </div>\n                ) : (\n                    null\n                )}\n                \n                <div>\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"testLanding\" style={{height: \"auto\"}}>\n            <div style={{width: \"100%\", maxWidth: \"750px\"}}>\n                {(devTools == 3) ? (\n                    <div  \n                        onClick={() => {\n                            toggleHardReset(hardReset + 1)\n                            if (hardReset == 2) {\n                                document.cookie= \"k2wsr=0,0\"\n                                setWinCount(parseInt(0))\n                                setWinStreak(parseInt(0))\n                                toggleHardReset(0)\n                            }\n                        }} \n                        style={{position: \"absolute\", backgroundColor: \"red\", top: \"0px\", right: \"0px\"}}\n                    >\n                        w: {windowDimensions.width}, h: {windowDimensions.height}\n                    </div>\n                    \n                ) : (\n                    null\n                )}\n\n                {(devTools == 3) ? (\n                    <div style={{position: \"absolute\", top: \"0px\", left: \"0px\"}}>\n                    <input\n                        \n                        onChange={(e) => {\n                            if (!isNaN(e.target.value)) {\n                                submitSeed(parseInt(e.target.value))\n                            } else {\n                                console.log(\"invalid\")\n                            }\n                        }}\n                    />\n                    <button\n                        onClick={() => {\n                            setSeed(tempSeed)\n                            toggleDev(0)\n                            submitSeed(0)\n                        }}\n                    >Set Seed</button>\n                    </div>\n                ) : (\n                    null\n                )}  \n\n                Wordle sim\n                <br/>\n\n                \n                <div>\n                    Wins: {winCount}, Winstreak: {winStreak}\n                </div>\n\n                <br/>\n\n                <div>\n                    {renderWorkspace()}\n                </div>\n\n                {/* {(showWord || devTools == 3) ? (\n                    <div>{currentWord}</div>\n                ) : (\n                    (showIssue) ? (\n                        <div>{issue}</div>\n                    ) : (\n                        null\n                        )\n                    )}\n                {(showIssue) ? (\n                    <div>{issue}</div>\n                ) : (null)} */}\n                \n                {(win) ? (\n                    <div>\n                        {(totalTime)/1000}s, Seed: {seed}\n                    </div>\n                ) : (\n                    (showWord || devTools == 3) ? (\n                        <div>{currentWord}, Seed: {seed}</div>\n                    ) : (\n                        (showIssue) ? (\n                            <div>{issue}</div>\n                        ) : (\n                            null\n                            )\n                        )\n                )}\n\n                <br/>\n                <div className=\"flexbox\">\n                <input\n                    className=\"ctButton\"\n                    style={{marginLeft: \"5%\", marginRight: \"5%\",marginTop:\"0\", float: \"left\", border: \"none\", backgroundColor: \"white\", color: \"black\", padding: \"12px\", width: \"30%\", justifyContent: \"center\"}}\n                    \n                    value={currentGuess}\n                    onChange={(e)=>{\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n\n                        var temp = e.target.value.substr(0,5)\n\n\n                        setGuess(temp)\n\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            submitGuess(currentGuess.toLowerCase())\n                        }\n                    }}\n                />\n            \n                {(win) ? (\n                    <button \n                        onClick={() => {\n                            resetGame()\n                        }}\n                        className=\"wordleButton\"\n                        style={{padding: \"11px\", marginRight: \"5%\", width: \"60%\"}}\n                    >\n                        Continue\n                    </button>\n                ) : (\n                    <div style={{display: \"inline\", marginRight: \"5%\", width: \"60%\"}}>\n                        <button \n                            className=\"wordleButton\"\n                            style={{padding: \"11px\", width: \"40%\", marginRight: \"5%\"}}\n                            onClick={() => {\n                                if (guessCount <= 5 && win == false) {\n                                    submitGuess(currentGuess.toLowerCase())\n                                    \n                                } else {\n                                    resetGame()\n                                }\n                            \n                        }}>\n                            Submit\n                        </button>\n                        <button \n                            onClick={() => {\n                                if (guessCount == 0){\n                                    if (devTools == 3) {\n                                        toggleDev(0)\n                                    } else {\n                                        toggleDev(devTools + 1)\n                                    }\n                                } else {\n                                    toggleDev(0)\n                                }\n                                resetGame()\n                                if (!win) {\n                                    setWinStreak(0)\n                                }\n                                \n                            }}\n                            className=\"wordleReset\"\n                            style={{padding: \"11px\", width: \"40%\"}}\n                        >\n                            Reset\n                        </button>\n                    </div>\n                )}\n                \n                </div>\n\n                <br/>\n                <div>\n                    {renderKeyBoard()}\n                </div>\n                <br/>\n                <div>\n                    <a href='/' className=\"wordleButton\">Return to the main page</a>\n                </div>\n\n                <br/>\n            </div>\n        </div>\n    )\n}\n\nexport default Wordle;"]},"metadata":{},"sourceType":"module"}