{"ast":null,"code":"import _slicedToArray from\"/Users/ktu/Documents/KayToo2022.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import axios from\"axios\";import words1 from\"./files/shuffled_real_wordles.txt\";import words2 from\"./files/combined_wordlist.txt\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getWindowDimensions(){var _window=window,width=_window.innerWidth,height=_window.innerHeight;return{width:width,height:height};}function Wordle(){var _useState=useState(getWindowDimensions()),_useState2=_slicedToArray(_useState,2),windowDimensions=_useState2[0],setWindowDimensions=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),currentWord=_useState4[0],setWord=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentGuess=_useState6[0],setGuess=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),guessCount=_useState8[0],setCount=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),guessHistory=_useState10[0],setHistory=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),win=_useState12[0],setWin=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),rightLetters=_useState14[0],setRight=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),missedLetters=_useState16[0],setMissed=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),wrongLetters=_useState18[0],setWrong=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),winCount=_useState20[0],setWinCount=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),winStreak=_useState22[0],setWinStreak=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),wordBank=_useState24[0],setWordBank=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),guessBank=_useState26[0],setGuessBank=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),showWord=_useState28[0],toggleShowWord=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),showIssue=_useState30[0],toggleIssue=_useState30[1];var _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),issue=_useState32[0],setIssue=_useState32[1];var kbTop=['q','w','e','r','t','y','u','i','o','p'];var kbMid=['a','s','d','f','g','h','j','k','l'];var kbBot=['z','x','c','v','b','n','m'];var wordList=[\"tower\",\"water\",\"actor\",\"agent\"];useEffect(function(){fetch(words1).then(function(r){return r.text();}).then(function(text){setWordBank(text.split('\\n'));});fetch(words2).then(function(r){return r.text();}).then(function(text){setGuessBank(text.split('\\n'));});function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[]);useEffect(function(){generateWord();},[wordBank]);var generateWord=function generateWord(){// for now get word from wordlist\nvar rand=Math.floor(Math.random()*wordBank.length);// console.log(rand)\nvar word=wordBank[Math.floor(Math.random()*wordBank.length)];// console.log(word)\nsetWord(word);};var resetGame=function resetGame(){generateWord();setCount(0);setHistory([]);setWin(false);setGuess(\"\");setRight([]);setWrong([]);setMissed([]);toggleShowWord(false);};var submitGuess=function submitGuess(guess){if(!guess||guess.length!=5){setIssue(\"Guess must be 5 letters\");toggleIssue(true);console.log(\"Guess must be 5 letters\");}else if(guessBank.indexOf(guess)<0){setIssue(\"Not a valid word\");toggleIssue(true);console.log(\"Not a word\");}else{setCount(guessCount+1);var ret=[];var didWin=true;for(var i in guess){var val=-1;if(guess[i]==currentWord[i]){val=1;}else if(currentWord.indexOf(guess[i])>=0){val=0;}if(val!=1){didWin=false;}if(val==1){var tempRight=rightLetters;tempRight.push(guess[i]);setRight(tempRight);}if(val==0){var tempMissed=missedLetters;tempMissed.push(guess[i]);setMissed(tempMissed);}if(val==-1){var tempWrong=wrongLetters;tempWrong.push(guess[i]);setWrong(tempWrong);}ret.push([guess[i],val]);}setWin(didWin);var tempHist=guessHistory;tempHist.push(ret);setHistory(tempHist);setGuess(\"\");if(didWin){setWinCount(winCount+1);setWinStreak(winStreak+1);// resetGame()\n}if(!didWin&&guessCount>=5){setWinStreak(0);toggleShowWord(true);// resetGame()\n}}return ret;};var renderGuesses=function renderGuesses(){if(guessHistory.length==0){return[];}var guesses=guessHistory.map(function(g){return/*#__PURE__*/_jsx(\"div\",{style:{height:\"40px\",width:\"100%\",marginBottom:\"2px\"},children:renderGuess(g)});});// for (var i = 0; i < 6 - guesses.length; i++) {\n//     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n// }\nreturn guesses;};var renderGuess=function renderGuess(i){var c=i.map(function(c){return c[1]==0?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},children:c[0].toUpperCase()}):c[1]==1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},children:c[0].toUpperCase()}):c[1]==-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:c[0].toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{children:\"error\"});});return/*#__PURE__*/_jsx(\"div\",{children:c});};var renderCurrent=function renderCurrent(){if(currentGuess==\"\"){// have this be a bar with character height\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"})]});}var r=currentGuess.split('').map(function(c){return/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\",fontWeight:\"bold\"},children:c[0].toUpperCase()});});var filler=5-r.length;for(var i=0;i<filler;i++){r.push(/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}));}return/*#__PURE__*/_jsx(\"div\",{style:{display:\"block\"},children:r});};var renderKeyBoard=function renderKeyBoard(){var t=kbTop.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var m=kbMid.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var b=kbBot.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:t}),/*#__PURE__*/_jsx(\"div\",{children:m}),/*#__PURE__*/_jsx(\"div\",{children:b})]});};var renderWorkspace=function renderWorkspace(){var guessesTaken=renderGuesses().length;var rowsLeft=5-guessesTaken;var rows=[];for(var i=0;i<rowsLeft;i++){rows.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{display:\"inline-block\",margin:\"1px\",padding:\"1px\"},children:\"_\"})]}));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:renderGuesses()}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"block\",width:\"100%\",height:\"1px\"}}),guessCount<6?/*#__PURE__*/_jsx(\"div\",{children:renderCurrent()}):null,/*#__PURE__*/_jsx(\"div\",{children:rows})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"testLanding\",children:[\"Wordle sim\",/*#__PURE__*/_jsxs(\"div\",{children:[\"Wins: \",winCount,\", Winstreak: \",winStreak]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderWorkspace()}),showWord?/*#__PURE__*/_jsx(\"div\",{children:currentWord}):null,showIssue?/*#__PURE__*/_jsx(\"div\",{children:issue}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"ctButton\",style:{margin:\"none\",marginTop:\"0\",float:\"left\",border:\"none\",backgroundColor:\"white\",color:\"black\",padding:\"12px\"},value:currentGuess,onChange:function onChange(e){toggleIssue(false);if(win||guessCount>=6){resetGame();}var temp=e.target.value.substr(0,5);setGuess(temp);},onKeyPress:function onKeyPress(e){if(e.key==='Enter'){if(win||guessCount>=6){resetGame();}submitGuess(currentGuess.toLowerCase());}}}),/*#__PURE__*/_jsx(\"button\",{className:\"wordleButton\",style:{marginLeft:\"15px\",padding:\"11px\"},onClick:function onClick(){if(guessCount<=6&&win==false){submitGuess(currentGuess.toLowerCase());}},children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){resetGame();if(!win){setWinStreak(0);setWinCount(0);}},className:\"wordleReset\",style:{marginLeft:\"15px\",padding:\"11px\"},children:\"Reset\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderKeyBoard()}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"wordleButton\",children:\"Return to the main page\"})}),/*#__PURE__*/_jsx(\"br\",{})]});}export default Wordle;","map":{"version":3,"sources":["/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js"],"names":["useEffect","useState","axios","words1","words2","getWindowDimensions","window","width","innerWidth","height","innerHeight","Wordle","windowDimensions","setWindowDimensions","currentWord","setWord","currentGuess","setGuess","guessCount","setCount","guessHistory","setHistory","win","setWin","rightLetters","setRight","missedLetters","setMissed","wrongLetters","setWrong","winCount","setWinCount","winStreak","setWinStreak","wordBank","setWordBank","guessBank","setGuessBank","showWord","toggleShowWord","showIssue","toggleIssue","issue","setIssue","kbTop","kbMid","kbBot","wordList","fetch","then","r","text","split","handleResize","addEventListener","removeEventListener","generateWord","rand","Math","floor","random","length","word","resetGame","submitGuess","guess","console","log","indexOf","ret","didWin","i","val","tempRight","push","tempMissed","tempWrong","tempHist","renderGuesses","guesses","map","g","marginBottom","renderGuess","c","backgroundColor","display","padding","margin","fontWeight","borderColor","toUpperCase","renderCurrent","filler","renderKeyBoard","t","k","m","b","renderWorkspace","guessesTaken","rowsLeft","rows","marginTop","float","border","color","e","temp","target","value","substr","key","toLowerCase","marginLeft"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport words1 from \"./files/shuffled_real_wordles.txt\"\nimport words2 from \"./files/combined_wordlist.txt\"\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Wordle() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [currentWord, setWord] = useState(\"\");\n    const [currentGuess, setGuess] = useState(\"\");\n    const [guessCount, setCount] = useState(0);\n    const [guessHistory, setHistory] = useState([]);\n    const [win, setWin] = useState(false);\n    \n\n    const [rightLetters, setRight] = useState([]);\n    const [missedLetters, setMissed] = useState([]);\n    const [wrongLetters, setWrong] = useState([]);\n\n    const [winCount, setWinCount] = useState(0);\n    const [winStreak, setWinStreak] = useState(0);\n\n    const [wordBank, setWordBank] = useState([]);\n    const [guessBank, setGuessBank] = useState([]);\n\n    const [showWord, toggleShowWord] = useState(false);\n    const [showIssue, toggleIssue] = useState(false);\n\n    const [issue, setIssue] = useState(\"\")\n\n    const kbTop = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p']\n    const kbMid = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l']\n    const kbBot = ['z', 'x', 'c', 'v', 'b', 'n', 'm']\n\n    var wordList = [\"tower\", \"water\", \"actor\", \"agent\"]\n\n    useEffect(() => {\n        \n        fetch(words1)\n            .then(r => r.text())\n            .then(text => {\n                setWordBank(text.split('\\n'))\n            })\n\n        fetch(words2)\n            .then(r => r.text())\n            .then(text => {\n                setGuessBank(text.split('\\n'))\n            })\n        \n\n        \n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        generateWord()\n    }, [wordBank])\n\n    const generateWord = () => {\n        // for now get word from wordlist\n        var rand = Math.floor(Math.random() * wordBank.length)\n        // console.log(rand)\n        var word = wordBank[Math.floor(Math.random() * wordBank.length)]\n        // console.log(word)\n        setWord(word)\n    }\n\n    const resetGame = () => {\n        generateWord()\n        setCount(0)\n        setHistory([])\n        setWin(false)\n        setGuess(\"\")\n        setRight([])\n        setWrong([])\n        setMissed([])\n        toggleShowWord(false)\n    }\n\n    const submitGuess = (guess) => {\n        if (!guess || guess.length != 5) {\n            setIssue(\"Guess must be 5 letters\")\n            toggleIssue(true)\n            console.log(\"Guess must be 5 letters\")\n        } else if (guessBank.indexOf(guess) < 0){\n            setIssue(\"Not a valid word\")\n            toggleIssue(true)\n            console.log(\"Not a word\")\n        } else {\n            setCount(guessCount + 1)\n            var ret = []\n            var didWin = true;\n\n            for (var i in guess) {\n                var val = -1\n                \n                if (guess[i] == currentWord[i]) {\n                    val = 1\n                } else if (currentWord.indexOf(guess[i]) >= 0) {\n                    val = 0\n                }\n\n                if (val != 1) {\n                    didWin = false\n                }\n\n                if (val == 1) {\n                    var tempRight = rightLetters\n                    tempRight.push(guess[i])\n                    setRight(tempRight)\n                }\n\n                if (val == 0) {\n                    var tempMissed = missedLetters\n                    tempMissed.push(guess[i])\n                    setMissed(tempMissed)\n                }\n\n                if (val == -1) {\n                    var tempWrong = wrongLetters\n                    tempWrong.push(guess[i])\n                    setWrong(tempWrong)\n                }\n                ret.push([guess[i], val])\n            }\n            \n\n            \n\n            setWin(didWin)\n            var tempHist = guessHistory\n            tempHist.push(ret)\n            setHistory(tempHist)\n            setGuess(\"\")\n            if (didWin) {\n                setWinCount(winCount + 1)\n                setWinStreak(winStreak + 1)\n                // resetGame()\n            }\n            if (!didWin && guessCount >= 5) {\n                setWinStreak(0)\n                toggleShowWord(true)\n                // resetGame()\n            }\n        }\n        return ret\n    }\n\n    const renderGuesses = () => {\n        if (guessHistory.length == 0) {\n            return []\n        }\n\n        const guesses = guessHistory.map((g) => (\n            <div style={{height: \"40px\", width: \"100%\", marginBottom: \"2px\"}}>\n                {renderGuess(g)}\n            </div>\n        ))\n\n        // for (var i = 0; i < 6 - guesses.length; i++) {\n        //     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n        // }\n        return guesses\n    }\n\n    const renderGuess = (i) => {\n        const c = i.map((c) => (\n            (c[1] == 0) ? (\n                <div className=\"wordleLetter\" style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}>\n                    {c[0].toUpperCase()}\n                </div>\n            ) : (\n                (c[1] == 1) ? (\n                    <div className=\"wordleLetter\"  style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}>\n                        {c[0].toUpperCase()}\n                    </div>\n                ) : (\n                    (c[1] == -1) ? (\n                        <div className=\"wordleLetter\"  style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                            {c[0].toUpperCase()}\n                        </div>\n                    ) : (<div>error</div>)\n                )\n            )   \n        ))\n        return (\n            <div>\n                {c}\n            </div>\n        )\n    }\n\n    const renderCurrent = () => {\n        if (currentGuess == \"\") {\n            // have this be a bar with character height\n            return (\n                <div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                </div>\n            )\n        }\n\n        const r = currentGuess.split('').map((c) => (\n            <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\", fontWeight: \"bold\"}}>\n                {c[0].toUpperCase()}\n            </div>\n        ))\n\n        var filler = 5 - r.length\n\n        for (var i = 0; i < filler; i++) {\n            r.push(<div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>)\n        }\n\n        return (\n            <div style={{display: \"block\"}}>\n                {r}\n            </div>\n        )\n    }\n\n    const renderKeyBoard = () => {\n        const t = kbTop.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const m = kbMid.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const b = kbBot.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        return (\n            <div>\n                <div>{t}</div>\n                <div>{m}</div>\n                {/* add the backspace and enter keys in bottom row */}\n                <div>{b}</div>\n            </div>\n        )\n    }\n\n    const renderWorkspace = () => {\n        var guessesTaken = renderGuesses().length\n        var rowsLeft = 5 - guessesTaken\n\n        var rows = []\n\n        for (var i = 0; i < rowsLeft; i++) {\n            rows.push(\n                <div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                    <div className=\"wordleLetter\" style={{display: \"inline-block\", margin: \"1px\", padding:\"1px\"}}>_</div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div>\n                    {renderGuesses()}\n                </div>\n                <div style={{display: \"block\", width: \"100%\", height: \"1px\"}}/>\n                {(guessCount < 6) ? (\n                    <div>\n                        {renderCurrent()}\n                    </div>\n                ) : (\n                    null\n                )}\n                \n                <div>\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"testLanding\">\n            Wordle sim\n            <div>\n                Wins: {winCount}, Winstreak: {winStreak}\n            </div>\n\n            <br/>\n            <br/>\n            <div>\n                {renderWorkspace()}\n            </div>\n            {(showWord) ? (\n                <div>{currentWord}</div>\n            ) : (null)}\n            {(showIssue) ? (\n                <div>{issue}</div>\n            ) : (null)}\n            <br/>\n            <div>\n            <input\n                className=\"ctButton\"\n                style={{margin: \"none\", marginTop:\"0\", float: \"left\", border: \"none\", backgroundColor: \"white\", color: \"black\", padding: \"12px\"}}\n                \n                value={currentGuess}\n                onChange={(e)=>{\n                    toggleIssue(false)\n                    if (win || guessCount >=6) {\n                        resetGame()\n                    }\n\n                    var temp = e.target.value.substr(0,5)\n\n\n                    setGuess(temp)\n\n                }}\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        submitGuess(currentGuess.toLowerCase())\n                    }\n                }}\n            />\n            <button \n                className=\"wordleButton\"\n                style={{marginLeft: \"15px\", padding: \"11px\"}}\n                onClick={() => {\n                    if (guessCount <= 6 && win == false) {\n                        submitGuess(currentGuess.toLowerCase())\n                        \n                    }\n                \n            }}>\n                Submit\n            </button>\n            <button \n                onClick={() => {\n                    resetGame()\n                    if (!win) {\n                        setWinStreak(0)\n                        setWinCount(0)\n                    }\n                    \n                }}\n                className=\"wordleReset\"\n                style={{marginLeft: \"15px\", padding: \"11px\"}}\n            >\n                Reset\n            </button>\n            </div>\n            <br/>\n            {/* <div>\n                {renderGuesses()}\n            </div>\n            <div>{renderCurrent()}</div> */}\n            <br/>\n            <div>\n                {renderKeyBoard()}\n            </div>\n            <br/>\n            <div>\n                <a href='/' className=\"wordleButton\">Return to the main page</a>\n            </div>\n\n            <br/>\n            \n        </div>\n    )\n}\n\nexport default Wordle;"]},"metadata":{},"sourceType":"module"}