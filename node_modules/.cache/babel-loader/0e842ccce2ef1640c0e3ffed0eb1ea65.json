{"ast":null,"code":"var _jsxFileName = \"/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction Wordle() {\n  _s();\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello World\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Wordle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Wordle;\nexport default Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js"],"names":["useEffect","useState","axios","getWindowDimensions","innerWidth","width","innerHeight","height","window","Wordle","handleResize","setWindowDimensions","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,mBAAT,GAA+B;AAC3B,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD;AACA,SAAO;AACHH,IAAAA,KADG;AAEHE,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,MAAT,GAAkB;AAAA;;AACdT,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASU,YAAT,GAAwB;AACpBC,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACH;;AAEDK,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAMF,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAfQD,M;;KAAAA,M;AAiBT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Wordle() {\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <div>\n            Hello World\n        </div>\n    )\n}\n\nexport default Wordle;"]},"metadata":{},"sourceType":"module"}