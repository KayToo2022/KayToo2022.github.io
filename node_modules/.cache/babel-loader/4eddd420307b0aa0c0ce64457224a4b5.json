{"ast":null,"code":"import _slicedToArray from\"/Users/ktu/Documents/KayToo2022.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import axios from\"axios\";import words1 from\"./files/shuffled_real_wordles.txt\";import words2 from\"./files/combined_wordlist.txt\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getWindowDimensions(){var _window=window,width=_window.innerWidth,height=_window.innerHeight;return{width:width,height:height};}function Wordle(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),devTools=_useState2[0],toggleDev=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),hardReset=_useState4[0],toggleHardReset=_useState4[1];var _useState5=useState(getWindowDimensions()),_useState6=_slicedToArray(_useState5,2),windowDimensions=_useState6[0],setWindowDimensions=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentWord=_useState8[0],setWord=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),currentGuess=_useState10[0],setGuess=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),guessCount=_useState12[0],setCount=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),guessHistory=_useState14[0],setHistory=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),win=_useState16[0],setWin=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),rightLetters=_useState18[0],setRight=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),missedLetters=_useState20[0],setMissed=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),wrongLetters=_useState22[0],setWrong=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),winCount=_useState24[0],setWinCount=_useState24[1];var _useState25=useState(0),_useState26=_slicedToArray(_useState25,2),winStreak=_useState26[0],setWinStreak=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),wordBank=_useState28[0],setWordBank=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),guessBank=_useState30[0],setGuessBank=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),showWord=_useState32[0],toggleShowWord=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),showIssue=_useState34[0],toggleIssue=_useState34[1];var _useState35=useState(\"\"),_useState36=_slicedToArray(_useState35,2),issue=_useState36[0],setIssue=_useState36[1];var kbTop=['q','w','e','r','t','y','u','i','o','p'];var kbMid=['a','s','d','f','g','h','j','k','l'];var kbBot=['z','x','c','v','b','n','m'];var wordList=[\"tower\",\"water\",\"actor\",\"agent\"];useEffect(function(){if(document.cookie.split(\";\").some(function(item){return item.trim().startsWith(\"k2wsr=\");})){console.log(document.cookie.split('; ').find(function(row){return row.startsWith('k2wsr=');}));var cookieData=document.cookie.split('; ').find(function(row){return row.startsWith('k2wsr=');}).split('=')[1].split(',');console.log(cookieData);setWinCount(parseInt(cookieData[0]));setWinStreak(parseInt(cookieData[1]));}else{document.cookie=\"k2wsr=0,0\";}fetch(words1).then(function(r){return r.text();}).then(function(text){setWordBank(text.split('\\n'));});fetch(words2).then(function(r){return r.text();}).then(function(text){setGuessBank(text.split('\\n'));});function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[]);useEffect(function(){generateWord();},[wordBank]);useEffect(function(){if(winCount!=0){document.cookie=\"k2wsr=\".concat(winCount,\",\").concat(winStreak);}},[winCount,winStreak]);var generateWord=function generateWord(){// for now get word from wordlist\nvar rand=Math.floor(Math.random()*wordBank.length);// console.log(rand)\nvar word=wordBank[Math.floor(Math.random()*wordBank.length)];// console.log(word)\nsetWord(word);};var resetGame=function resetGame(){generateWord();setCount(0);setHistory([]);setWin(false);setGuess(\"\");setRight([]);setWrong([]);setMissed([]);toggleShowWord(false);};var submitGuess=function submitGuess(guess){if(!guess||guess.length!=5){setIssue(\"Guess must be 5 letters\");toggleIssue(true);console.log(\"Guess must be 5 letters\");}else if(guessBank.indexOf(guess)<0){setIssue(\"Not a valid word\");toggleIssue(true);console.log(\"Not a word\");}else{setCount(guessCount+1);var ret=[];var didWin=true;for(var i in guess){var val=-1;if(guess[i]==currentWord[i]){val=1;}else if(currentWord.indexOf(guess[i])>=0){val=0;}if(val!=1){didWin=false;}if(val==1){var tempRight=rightLetters;tempRight.push(guess[i]);setRight(tempRight);}if(val==0){var tempMissed=missedLetters;tempMissed.push(guess[i]);setMissed(tempMissed);}if(val==-1){var tempWrong=wrongLetters;tempWrong.push(guess[i]);setWrong(tempWrong);}ret.push([guess[i],val]);}setWin(didWin);var tempHist=guessHistory;tempHist.push(ret);setHistory(tempHist);setGuess(\"\");if(didWin){setWinCount(winCount+1);setWinStreak(winStreak+1);// resetGame()\n}if(!didWin&&guessCount>=5){setWinStreak(0);toggleShowWord(true);// resetGame()\n}}return ret;};var renderGuesses=function renderGuesses(){if(guessHistory.length==0){return[];}var guesses=guessHistory.map(function(g){return/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",marginBottom:\"2px\"},children:renderGuess(g)});});// for (var i = 0; i < 6 - guesses.length; i++) {\n//     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n// }\nreturn guesses;};var renderGuess=function renderGuess(i){var c=i.map(function(c){return c[1]==0?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):c[1]==1?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):c[1]==-1?/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})}):/*#__PURE__*/_jsx(\"div\",{children:\"error\"});});return/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:c});};var renderCurrent=function renderCurrent(){if(currentGuess==\"\"){// have this be a bar with character height\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})})]});}var r=currentGuess.split('').map(function(c){return/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:c[0].toUpperCase()})});});var filler=5-r.length;for(var i=0;i<filler;i++){r.push(/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}));}return/*#__PURE__*/_jsx(\"div\",{children:r});};var renderKeyBoard=function renderKeyBoard(){var t=kbTop.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var m=kbMid.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});var b=kbBot.map(function(k){return rightLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"green\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"green\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):missedLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"#cdab4b\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\",borderColor:\"#cdab4b\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):wrongLetters.indexOf(k)!=-1?/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"black\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()}):/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},onClick:function onClick(){toggleIssue(false);if(win||guessCount>=6){resetGame();}if(currentGuess.length<5){setGuess(currentGuess+k);}},children:k.toUpperCase()});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:t}),/*#__PURE__*/_jsx(\"div\",{className:\"flexbox\",children:m}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexbox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",width:\"auto\"},onClick:function onClick(){toggleIssue(false);if(guessCount<=5&&win==false){submitGuess(currentGuess.toLowerCase());}else{resetGame();}},children:\"Enter\"}),b,/*#__PURE__*/_jsx(\"div\",{className:\"wordleLetter\",style:{backgroundColor:\"gray\",display:\"inline-block\",padding:\"1px\",margin:\"1px\",width:\"auto\"},onClick:function onClick(){toggleIssue(false);setGuess(currentGuess.substr(0,currentGuess.length-1));},children:\"Delete\"})]})]});};var renderWorkspace=function renderWorkspace(){var guessesTaken=renderGuesses().length;var rowsLeft=5-guessesTaken;var rows=[];for(var i=0;i<rowsLeft;i++){rows.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{display:\"inline-block\",padding:\"1px\",margin:\"1px\",fontWeight:\"bold\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"content\"})})]}));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:renderGuesses()}),guessCount<6?/*#__PURE__*/_jsx(\"div\",{children:renderCurrent()}):null,/*#__PURE__*/_jsx(\"div\",{children:rows})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"testLanding\",style:{height:\"auto\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",maxWidth:\"750px\"},children:[devTools==3?/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){toggleHardReset(hardReset+1);if(hardReset==2){document.cookie=\"k2wsr=0,0\";setWinCount(parseInt(0));setWinStreak(parseInt(0));toggleHardReset(0);}},style:{position:\"absolute\",backgroundColor:\"red\",top:\"0px\",right:\"0px\"},children:[\"w: \",windowDimensions.width,\", h: \",windowDimensions.height]}):null,/*#__PURE__*/_jsxs(\"div\",{children:[\"Wins: \",winCount,\", Winstreak: \",winStreak]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderWorkspace()}),showWord?/*#__PURE__*/_jsx(\"div\",{children:currentWord}):null,showIssue?/*#__PURE__*/_jsx(\"div\",{children:issue}):null,devTools==3?/*#__PURE__*/_jsx(\"div\",{children:currentWord}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexbox\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"ctButton\",style:{marginLeft:\"5%\",marginRight:\"5%\",marginTop:\"0\",float:\"left\",border:\"none\",backgroundColor:\"white\",color:\"black\",padding:\"12px\",width:\"30%\",justifyContent:\"center\"},value:currentGuess,onChange:function onChange(e){toggleIssue(false);if(win||guessCount>=6){resetGame();}var temp=e.target.value.substr(0,5);setGuess(temp);},onKeyPress:function onKeyPress(e){if(e.key==='Enter'){if(win||guessCount>=6){resetGame();}submitGuess(currentGuess.toLowerCase());}}}),win?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){resetGame();},className:\"wordleButton\",style:{padding:\"11px\",marginRight:\"5%\",width:\"60%\"},children:\"Continue\"}):/*#__PURE__*/_jsxs(\"div\",{style:{display:\"inline\",marginRight:\"5%\",width:\"60%\"},children:[/*#__PURE__*/_jsx(\"button\",{className:\"wordleButton\",style:{padding:\"11px\",width:\"40%\",marginRight:\"5%\"},onClick:function onClick(){if(guessCount<=5&&win==false){submitGuess(currentGuess.toLowerCase());}else{resetGame();}},children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){console.log(devTools);if(guessCount==0){if(devTools==3){toggleDev(0);}else{toggleDev(devTools+1);}}else{toggleDev(0);}resetGame();if(!win){setWinStreak(0);}},className:\"wordleReset\",style:{padding:\"11px\",width:\"40%\"},children:\"Reset\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:renderKeyBoard()}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"wordleButton\",children:\"Return to the main page\"})}),/*#__PURE__*/_jsx(\"br\",{})]})});}export default Wordle;","map":{"version":3,"sources":["/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js"],"names":["useEffect","useState","axios","words1","words2","getWindowDimensions","window","width","innerWidth","height","innerHeight","Wordle","devTools","toggleDev","hardReset","toggleHardReset","windowDimensions","setWindowDimensions","currentWord","setWord","currentGuess","setGuess","guessCount","setCount","guessHistory","setHistory","win","setWin","rightLetters","setRight","missedLetters","setMissed","wrongLetters","setWrong","winCount","setWinCount","winStreak","setWinStreak","wordBank","setWordBank","guessBank","setGuessBank","showWord","toggleShowWord","showIssue","toggleIssue","issue","setIssue","kbTop","kbMid","kbBot","wordList","document","cookie","split","some","item","trim","startsWith","console","log","find","row","cookieData","parseInt","fetch","then","r","text","handleResize","addEventListener","removeEventListener","generateWord","rand","Math","floor","random","length","word","resetGame","submitGuess","guess","indexOf","ret","didWin","i","val","tempRight","push","tempMissed","tempWrong","tempHist","renderGuesses","guesses","map","g","marginBottom","renderGuess","c","backgroundColor","display","padding","margin","fontWeight","borderColor","toUpperCase","renderCurrent","filler","renderKeyBoard","t","k","m","b","toLowerCase","substr","renderWorkspace","guessesTaken","rowsLeft","rows","maxWidth","position","top","right","marginLeft","marginRight","marginTop","float","border","color","justifyContent","e","temp","target","value","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport words1 from \"./files/shuffled_real_wordles.txt\"\nimport words2 from \"./files/combined_wordlist.txt\"\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Wordle() {\n\n    const [devTools, toggleDev] = useState(0);\n    const [hardReset, toggleHardReset] = useState(0);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [currentWord, setWord] = useState(\"\");\n    const [currentGuess, setGuess] = useState(\"\");\n    const [guessCount, setCount] = useState(0);\n    const [guessHistory, setHistory] = useState([]);\n    const [win, setWin] = useState(false);\n    \n\n    const [rightLetters, setRight] = useState([]);\n    const [missedLetters, setMissed] = useState([]);\n    const [wrongLetters, setWrong] = useState([]);\n\n    const [winCount, setWinCount] = useState(0);\n    const [winStreak, setWinStreak] = useState(0);\n\n    const [wordBank, setWordBank] = useState([]);\n    const [guessBank, setGuessBank] = useState([]);\n\n    const [showWord, toggleShowWord] = useState(false);\n    const [showIssue, toggleIssue] = useState(false);\n\n    const [issue, setIssue] = useState(\"\")\n\n    const kbTop = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p']\n    const kbMid = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l']\n    const kbBot = ['z', 'x', 'c', 'v', 'b', 'n', 'm']\n\n    var wordList = [\"tower\", \"water\", \"actor\", \"agent\"]\n\n    useEffect(() => {\n\n        if (document.cookie\n                .split(\";\")\n                .some(item => item.trim().startsWith(\"k2wsr=\"))) {\n                    console.log(document.cookie.split('; ').find(row => row.startsWith('k2wsr=')))\n                    var cookieData = document.cookie.split('; ').find(row => row.startsWith('k2wsr=')).split('=')[1].split(',')\n                    console.log(cookieData)\n                    setWinCount(parseInt(cookieData[0]))\n                    setWinStreak(parseInt(cookieData[1]))\n        } else {\n            document.cookie= \"k2wsr=0,0\"\n        }\n        \n        fetch(words1)\n            .then(r => r.text())\n            .then(text => {\n                setWordBank(text.split('\\n'))\n            })\n\n        fetch(words2)\n            .then(r => r.text())\n            .then(text => {\n                setGuessBank(text.split('\\n'))\n            })\n        \n\n        \n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        generateWord()\n    }, [wordBank])\n\n    useEffect(() => {\n        if (winCount != 0) {\n            document.cookie = `k2wsr=${winCount},${winStreak}`\n        }\n        \n    }, [winCount, winStreak])\n\n    \n\n    const generateWord = () => {\n        // for now get word from wordlist\n        var rand = Math.floor(Math.random() * wordBank.length)\n        // console.log(rand)\n        var word = wordBank[Math.floor(Math.random() * wordBank.length)]\n        // console.log(word)\n        setWord(word)\n    }\n\n    const resetGame = () => {\n        \n\n\n        generateWord()\n        setCount(0)\n        setHistory([])\n        setWin(false)\n        setGuess(\"\")\n        setRight([])\n        setWrong([])\n        setMissed([])\n        toggleShowWord(false)\n    }\n\n    const submitGuess = (guess) => {\n        if (!guess || guess.length != 5) {\n            setIssue(\"Guess must be 5 letters\")\n            toggleIssue(true)\n            console.log(\"Guess must be 5 letters\")\n        } else if (guessBank.indexOf(guess) < 0){\n            setIssue(\"Not a valid word\")\n            toggleIssue(true)\n            console.log(\"Not a word\")\n        } else {\n            setCount(guessCount + 1)\n            var ret = []\n            var didWin = true;\n\n            for (var i in guess) {\n                var val = -1\n                \n                if (guess[i] == currentWord[i]) {\n                    val = 1\n                } else if (currentWord.indexOf(guess[i]) >= 0) {\n                    val = 0\n                }\n\n                if (val != 1) {\n                    didWin = false\n                }\n\n                if (val == 1) {\n                    var tempRight = rightLetters\n                    tempRight.push(guess[i])\n                    setRight(tempRight)\n                }\n\n                if (val == 0) {\n                    var tempMissed = missedLetters\n                    tempMissed.push(guess[i])\n                    setMissed(tempMissed)\n                }\n\n                if (val == -1) {\n                    var tempWrong = wrongLetters\n                    tempWrong.push(guess[i])\n                    setWrong(tempWrong)\n                }\n                ret.push([guess[i], val])\n            }\n            \n\n            \n\n            setWin(didWin)\n            var tempHist = guessHistory\n            tempHist.push(ret)\n            setHistory(tempHist)\n            setGuess(\"\")\n            if (didWin) {\n                setWinCount(winCount + 1)\n                setWinStreak(winStreak + 1)\n                // resetGame()\n            }\n            if (!didWin && guessCount >= 5) {\n                setWinStreak(0)\n                toggleShowWord(true)\n                // resetGame()\n            }\n            \n        }\n        return ret\n    }\n\n    const renderGuesses = () => {\n        if (guessHistory.length == 0) {\n            return []\n        }\n\n        const guesses = guessHistory.map((g) => (\n            <div style={{width: \"100%\", marginBottom: \"2px\"}}>\n                {renderGuess(g)}\n            </div>\n        ))\n\n        // for (var i = 0; i < 6 - guesses.length; i++) {\n        //     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n        // }\n        return guesses\n    }\n\n    const renderGuess = (i) => {\n        const c = i.map((c) => (\n            (c[1] == 0) ? (\n                <div className=\"square\" style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}>\n                    <div className=\"content\">\n                        {c[0].toUpperCase()}\n                    </div>    \n                </div>\n            ) : (\n                (c[1] == 1) ? (\n                    <div className=\"square\"  style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>\n                    </div>\n                ) : (\n                    (c[1] == -1) ? (\n                        <div className=\"square\"  style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                            <div className=\"content\">\n                                {c[0].toUpperCase()}\n                            </div>\n                        </div>\n                    ) : (<div>error</div>)\n                )\n            )   \n        ))\n        return (\n            <div className=\"flexbox\">\n                {c}\n            </div>\n        )\n    }\n\n    const renderCurrent = () => {\n        if (currentGuess == \"\") {\n            // have this be a bar with character height\n            return (\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        const r = currentGuess.split('').map((c) => (\n            <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>    \n                    </div>\n\n        ))\n\n        var filler = 5 - r.length\n\n        for (var i = 0; i < filler; i++) {\n            r.push(\n                <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                    <div className=\"content\">\n                        \n                    </div>    \n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {r}\n            </div>\n        )\n    }\n\n    const renderKeyBoard = () => {\n        const t = kbTop.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const m = kbMid.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const b = kbBot.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        return (\n            <div>\n                <div className=\"flexbox\">{t}</div>\n                <div className=\"flexbox\">{m}</div>\n                {/* add the backspace and enter keys in bottom row */}\n                <div className=\"flexbox\">\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (guessCount <= 5 && win == false) {\n                                submitGuess(currentGuess.toLowerCase())\n                                \n                            } else {\n                                resetGame()\n                            }\n                        }}  \n                    >\n                        Enter\n                    </div>\n                    {b}\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            setGuess(currentGuess.substr(0,currentGuess.length -1 ))\n                        }}  \n                    >\n                        Delete\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const renderWorkspace = () => {\n        var guessesTaken = renderGuesses().length\n        var rowsLeft = 5 - guessesTaken\n\n        var rows = []\n\n        for (var i = 0; i < rowsLeft; i++) {\n            rows.push(\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div>\n                    {renderGuesses()}\n                </div>\n                {/* <div style={{display: \"block\", width: \"100%\", height: \"3px\"}}/> */}\n                {(guessCount < 6) ? (\n                    <div>\n                        {renderCurrent()}\n                    </div>\n                ) : (\n                    null\n                )}\n                \n                <div>\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"testLanding\" style={{height: \"auto\"}}>\n            <div style={{width: \"100%\", maxWidth: \"750px\"}}>\n                {(devTools == 3) ? (\n                    <div  \n                        onClick={() => {\n                            toggleHardReset(hardReset + 1)\n                            if (hardReset == 2) {\n                                document.cookie= \"k2wsr=0,0\"\n                                setWinCount(parseInt(0))\n                                setWinStreak(parseInt(0))\n                                toggleHardReset(0)\n                            }\n                        }} \n                        style={{position: \"absolute\", backgroundColor: \"red\", top: \"0px\", right: \"0px\"}}\n                    >\n                        w: {windowDimensions.width}, h: {windowDimensions.height}\n                    </div>\n                ) : (\n                    null\n                )}\n\n                {/* Wordle sim\n                <br/> */}\n\n                \n                <div>\n                    Wins: {winCount}, Winstreak: {winStreak}\n                </div>\n\n                <br/>\n\n                <div>\n                    {renderWorkspace()}\n                </div>\n                {(showWord) ? (\n                    <div>{currentWord}</div>\n                ) : (null)}\n                {(showIssue) ? (\n                    <div>{issue}</div>\n                ) : (null)}\n                {(devTools == 3) ? (\n                    <div>\n                        {currentWord}\n                    </div>\n                ) : (\n                    null\n                )}\n                <br/>\n                <div className=\"flexbox\">\n                <input\n                    className=\"ctButton\"\n                    style={{marginLeft: \"5%\", marginRight: \"5%\",marginTop:\"0\", float: \"left\", border: \"none\", backgroundColor: \"white\", color: \"black\", padding: \"12px\", width: \"30%\", justifyContent: \"center\"}}\n                    \n                    value={currentGuess}\n                    onChange={(e)=>{\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n\n                        var temp = e.target.value.substr(0,5)\n\n\n                        setGuess(temp)\n\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            submitGuess(currentGuess.toLowerCase())\n                        }\n                    }}\n                />\n            \n                {(win) ? (\n                    <button \n                        onClick={() => {\n                            resetGame()\n                        }}\n                        className=\"wordleButton\"\n                        style={{padding: \"11px\", marginRight: \"5%\", width: \"60%\"}}\n                    >\n                        Continue\n                    </button>\n                ) : (\n                    <div style={{display: \"inline\", marginRight: \"5%\", width: \"60%\"}}>\n                        <button \n                            className=\"wordleButton\"\n                            style={{padding: \"11px\", width: \"40%\", marginRight: \"5%\"}}\n                            onClick={() => {\n                                if (guessCount <= 5 && win == false) {\n                                    submitGuess(currentGuess.toLowerCase())\n                                    \n                                } else {\n                                    resetGame()\n                                }\n                            \n                        }}>\n                            Submit\n                        </button>\n                        <button \n                            onClick={() => {\n                                console.log(devTools)\n                                if (guessCount == 0){\n                                    if (devTools == 3) {\n                                        toggleDev(0)\n                                    } else {\n                                        toggleDev(devTools + 1)\n                                    }\n                                } else {\n                                    toggleDev(0)\n                                }\n                                resetGame()\n                                if (!win) {\n                                    setWinStreak(0)\n                                }\n                                \n                            }}\n                            className=\"wordleReset\"\n                            style={{padding: \"11px\", width: \"40%\"}}\n                        >\n                            Reset\n                        </button>\n                    </div>\n                )}\n                \n                </div>\n\n                <br/>\n                <div>\n                    {renderKeyBoard()}\n                </div>\n                <br/>\n                <div>\n                    <a href='/' className=\"wordleButton\">Return to the main page</a>\n                </div>\n\n                <br/>\n            </div>\n        </div>\n    )\n}\n\nexport default Wordle;"]},"metadata":{},"sourceType":"module"}