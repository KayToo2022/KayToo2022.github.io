[{"/Users/ktu/Documents/KayToo2022.github.io/src/index.js":"1","/Users/ktu/Documents/KayToo2022.github.io/src/App.js":"2","/Users/ktu/Documents/KayToo2022.github.io/src/reportWebVitals.js":"3","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Header.js":"4","/Users/ktu/Documents/KayToo2022.github.io/src/Components/About.js":"5","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Landing.js":"6","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Resume.js":"7","/Users/ktu/Documents/KayToo2022.github.io/src/Components/TestSpace.js":"8","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Portfolio.js":"9","/Users/ktu/Documents/KayToo2022.github.io/src/Components/skill_bar/SkillBar.js":"10","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Cocktails.js":"11","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js":"12"},{"size":660,"mtime":1637304539225,"results":"13","hashOfConfig":"14"},{"size":2502,"mtime":1646972589218,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1637092873568,"results":"16","hashOfConfig":"14"},{"size":3192,"mtime":1646272503459,"results":"17","hashOfConfig":"14"},{"size":6682,"mtime":1645216400810,"results":"18","hashOfConfig":"14"},{"size":2489,"mtime":1646972665472,"results":"19","hashOfConfig":"14"},{"size":11637,"mtime":1645214724419,"results":"20","hashOfConfig":"14"},{"size":4860,"mtime":1645136247291,"results":"21","hashOfConfig":"14"},{"size":24243,"mtime":1646972367763,"results":"22","hashOfConfig":"14"},{"size":2206,"mtime":1637367475272,"results":"23","hashOfConfig":"14"},{"size":22388,"mtime":1645943986792,"results":"24","hashOfConfig":"14"},{"size":37380,"mtime":1646971267543,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"18f7yvg",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":14,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/ktu/Documents/KayToo2022.github.io/src/index.js",["59","60","61","62","63"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useHistory,\n  HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/ktu/Documents/KayToo2022.github.io/src/App.js",["64","65","66","67","68","69","70","71","72"],"/Users/ktu/Documents/KayToo2022.github.io/src/reportWebVitals.js",[],"/Users/ktu/Documents/KayToo2022.github.io/src/Components/Header.js",["73","74","75","76","77","78","79","80","81"],"import { useEffect, useState } from \"react\";\nimport Fade from \"react-reveal\";\nimport { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nimport \"./styles.css\"\n\nfunction Header() {\n    const [dropdown, toggleDropdown] = useState(false)\n    \n    return(\n        <div className=\"main\">\n            <Fade>\n                <div className=\"linkcontainer\">\n                        {(!dropdown) ? (\n                            <div>\n                                <Link to=\"landing\" className=\"links\" smooth={true} duration={500} spy={true}>\n                                    Home\n                                </Link>\n                                <Link to=\"about\" className=\"links\" smooth={true} duration={500} spy={true}>\n                                    About\n                                </Link>\n                                <Link to=\"resume\" className=\"links\" smooth={true} duration={500} spy={true}>\n                                    Resume\n                                </Link>\n                                <Link to=\"portfolio\" className=\"links\" smooth={true} duration={500} spy={true}>\n                                    Portfolio\n                                </Link>\n                                \n                                <a style={{zIndex:\"99\"}} onClick={() => {toggleDropdown(true)}}>\n                                    Other\n                                </a>\n                            </div>\n                            \n                        ) : (\n                            <div>\n                                <Fade>\n                                    <div style={{display: \"inline-block\"}}>\n\n                                        <a \n                                            className=\"links\"\n                                            onClick={() => {\n                                                toggleDropdown(false)\n                                            }}\n                                        >\n                                            Back\n                                        </a>\n\n                                        <a href='/#/cocktails' className=\"links\">\n                                            Cocktails\n                                        </a>\n\n                                        <a href='/#/wordle' className=\"links\">\n                                            Wordle\n                                        </a>\n\n                                    \n                                    </div>\n                                </Fade>\n                                \n                            </div>\n                        )}\n                        \n                        {/* <a href='/#/cocktails' className=\"links\">\n                            Cocktails\n                        </a> */}\n                        {/* <Link to=\"contact\" className=\"links\" smooth={true} duration={500} spy={true}>\n                            Contact\n                        </Link> */}\n                        \n                    \n                    \n                </div>\n            </Fade>\n        </div>\n    )\n}\n\nexport default Header;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/About.js",["82","83","84","85","86","87","88"],"import {React, useEffect, useState}from \"react\";\nimport Fade from \"react-reveal\";\nimport {\n    HideBetween,\n    HideDuring,\n    HideOn,\n    HideScroll,\n  } from \"react-hide-on-scroll\";\n\nimport Logo from \"./Images/Logo.jpg\"\n\nimport \"./styles.css\"\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n\nfunction About() {\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    if(windowDimensions.width <= 700) {\n        return(\n            <div id=\"about\" className=\"MainContent\">\n                <div className=\"navPadding\"/>\n                {/* <HideBetween startDivID=\"landing\" endDivID=\"resume\" inverse> */}\n                    <Fade>\n                        <div className=\"gridWrapper\">\n                            {/* <div className=\"gridBoxL\" style={{textAlign:'center'}}>\n                                <img src={Logo} style = {{height: '120px', width: '120px', borderRadius:'50%', marginTop: '40px'}}></img>\n                            </div> */}\n                            <div className=\"gridBoxMobile\">\n                                <h1>About Me</h1>\n\n                                <p className=\"message\" style={{width:'100%'}}>\n                                    My name is Kyle Tu. I am an aspiring software developer studying to get my \n                                    Masters in Artificial Intelligence at San Jose State \n                                    University. I mainly use React to code webpages but I \n                                    have experience coding in Java, Python, C++, etc.\n                                </p>\n\n                                <p className=\"message\" style={{width:'100%'}}>\n                                    Earning my Major in Applied Mathematics and Minor in Computer\n                                    Science, I know my way around numbers and algorithms. Through \n                                    obtaining my Masters in Artificial Intelligence, I hope to sharpen\n                                    my software engineering skills and grow as a developer.\n                                </p>\n\n                                {/* <div className=\"gridWrapper\">\n                                    \n\n                                </div> */}\n                            </div>\n                            <div className=\"gridBoxMobile\">\n                                <h1>Contact Details:</h1>\n                                <h1 className=\"contactInfo\">kaytoo2022@gmail.com</h1>\n                                <h1 className=\"contactInfo\">510-612-3222</h1>\n                            </div>\n                                {/* <div className=\"gridCol6_11\">\n                                <h1 className=\"contactInfo\">kaytoo2022@gmail.com</h1>\n                                <h1 className=\"contactInfo\">(510)612-3222</h1>\n                                </div> */}\n\n                            <div className=\"gridBoxMobile\">\n                                <h1>Resume:</h1>\n                                <a href=\"https://drive.google.com/file/d/1LrkhlJ_QOVjraYpZ6QjBPVsqhWaDDnlZ/view?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                    Download\n                                </a>\n                            </div>\n                        </div>\n                        \n                    </Fade>\n                {/* </HideBetween> */}\n                <div className=\"navPadding\"/>            \n            </div> \n        )\n    }\n\n    return(\n        <div id=\"about\" className=\"MainContent\" style={{minHeight: '50vh'}}>\n            <div className=\"navPadding\"/>\n            {/* <HideBetween startDivID=\"landing\" endDivID=\"resume\" inverse> */}\n                <Fade>\n                    <div className=\"gridWrapper\">\n                        <div className=\"gridBoxL\" style={{textAlign:'center'}}>\n                            <a href='/#/test'>\n                            <img src={Logo} style = {{height: '120px', width: '120px', borderRadius:'50%', marginTop: '40px'}}>\n                                \n                            </img>\n                            </a>\n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1>About Me</h1>\n\n                            <p className=\"message\" style={{width:'100%'}}>\n                                My name is Kyle Tu. I am an aspiring software developer studying to get my \n                                Masters in Artificial Intelligence at San Jose State \n                                University. I mainly use React to code webpages but I \n                                have experience coding in Java, Python, C++, etc.\n                            </p>\n\n                            <p className=\"message\" style={{width:'100%'}}>\n                                Earning my Major in Applied Mathematics and Minor in Computer\n                                Science, I know my way around numbers and algorithms. Through \n                                obtaining my Masters in Artificial Intelligence, I hope to sharpen\n                                my software engineering skills and grow as a developer.\n                            </p>\n\n                            <div className=\"gridWrapper\">\n                                <div className=\"gridCol1_6\">\n                                   <h1>Contact Details:</h1>\n                                   <h1 className=\"contactInfo\">kaytoo2022@gmail.com</h1>\n                                   <h1 className=\"contactInfo\">510-612-3222</h1>\n                                </div>\n\n\n                                <div className=\"gridCol11_16\">\n                                   <h1>Resume:</h1>\n                                   <a href=\"https://drive.google.com/file/d/1LrkhlJ_QOVjraYpZ6QjBPVsqhWaDDnlZ/view?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                       Download\n                                   </a>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </Fade>\n            {/* </HideBetween> */}\n            <div className=\"navPadding\"/>            \n        </div> \n    )\n}\n\nexport default About;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Landing.js",["89","90","91","92","93","94"],"/Users/ktu/Documents/KayToo2022.github.io/src/Components/Resume.js",["95","96","97","98"],"import {React, useEffect, useState}from \"react\";\nimport Fade from \"react-reveal\";\nimport {\n    HideBetween,\n    HideDuring,\n    HideOn,\n    HideScroll,\n} from \"react-hide-on-scroll\";\n\nimport SkillBar from \"./skill_bar/SkillBar\"\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n  \nfunction Resume() {\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    if(windowDimensions.width <= 700) {\n        return(\n            <div id=\"resume\" className=\"MainContent\" style={{backgroundColor:\"white\", color: 'black'}}>\n            <div className=\"navPadding\"/>\n            {/* <HideBetween startDivID=\"about\" endDivID=\"portfolio\" inverse> */}\n                <Fade>\n                    <div className=\"gridWrapper\">\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Education</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Masters in Artificial Intelligence</h1>\n                            <p className=\"info\">San Jose State University • May 2024</p>\n\n                            <h1 className=\"major\">Bachelors in Applied Mathematics</h1>\n                            <p className=\"minor\">Minor in Computer Science</p>\n                            <p className=\"info\">San Jose State University • May 2021</p>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Experience</h1>\n                            </div>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            {/* <h1 className=\"major\">Adobe</h1>\n                            <p className=\"minor\">Software Engineering Intern, eCommerce Experiences</p>\n                            <p className=\"info\">May 2022 - August 2022</p> */}\n                            \n                            <h1 className=\"major\">Infinite Options</h1>\n                            <p className=\"minor\">Front-End Development Intern</p>\n                            <p className=\"info\">May 2021 - August 2021</p>\n                            <p className=\"info\">\n                                During the summer of 2021, I had the opportunity to intern at Infinite \n                                Options LLC as a Front-End Development Intern where I helped develop \n                                some of their in-house projects, such as Meals For Me and Serving Fresh, \n                                and more.\n                                <br/>\n                                <br/>\n                                As a member of the front-end development team, I was responsible for the \n                                development, maintenance, and quality assurance of our in-house products. \n                                Working with React, I developed features ranging from implementing UI's to \n                                integrating API's.\n                            </p>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Organizations</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Hong Kong Students Association</h1>\n                            <p className=\"info\">Treasurer • Executive Committee</p>\n                            <p className=\"info\">August 2019 - May 2021</p>\n                            <p className=\"info\">\n                                I joined HKSA as a treasurer intern in January of 2019. As the treasurer of HKSA,\n                                I was responsible for the financials of the organization including securing of funds\n                                and approving the projects of our event coordinators.\n                                <br/><br/>\n                                As a member of the Executive Comittee, I was responsible for approving our organizations\n                                agenda as well as managing relations between other branches of HKSA.\n                            </p>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Skills</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <SkillBar name=\"Java\" percent=\"55\" className=\"major\" color=\"rgb(61, 1, 103)\"/>\n                            <SkillBar name=\"C++\" percent=\"60\" className=\"major\" color=\"rgb(99, 199, 123)\"/>\n                            <SkillBar name=\"Python\" percent=\"85\" className=\"major\" color=\"rgb(7, 123, 228)\"/>\n                            <SkillBar name=\"HTML\" percent=\"70\" className=\"major\" color=\"rgb(132, 126, 217)\"/>\n                            <SkillBar name=\"CSS\" percent=\"50\" className=\"major\" color=\"rgb(107, 221, 141)\"/>\n                            <SkillBar name=\"JavaScript\" percent=\"70\" className=\"major\" color=\"rgb(76, 143, 225)\"/>\n                            <SkillBar name=\"React\" percent=\"90\" className=\"major\" color=\"rgb(109, 69, 188)\"/>\n                            <SkillBar name=\"Git\" percent=\"65\" className=\"major\" color=\"rgb(108, 223, 240)\"/>\n                            <SkillBar name=\"MATLAB\" percent=\"45\" className=\"major\" color=\"rgb(97, 103, 122)\"/>\n                        </div>\n                    </div>\n                </Fade>\n            {/* </HideBetween> */}\n            <div className=\"navPadding\"/>\n        </div>    \n        )\n    }\n\n    return(\n        <div id=\"resume\" className=\"MainContent\" style={{backgroundColor:\"white\", color: 'black'}}>\n            <div className=\"navPadding\"/>\n            {/* <HideBetween startDivID=\"about\" endDivID=\"portfolio\" inverse> */}\n                <Fade>\n                    <div className=\"gridWrapper\">\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Education</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Masters in Artificial Intelligence</h1>\n                            <p className=\"info\">San Jose State University • May 2024</p>\n\n                            <h1 className=\"major\">Bachelors in Applied Mathematics</h1>\n                            <p className=\"minor\">Minor in Computer Science</p>\n                            <p className=\"info\">San Jose State University • May 2021</p>\n                        </div>\n\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Experience</h1>\n                            </div>\n                        </div>\n                        <div className=\"gridBoxR\">\n                            {/* <h1 className=\"major\">Adobe Inc.</h1>\n                            <p className=\"minor\">Software Engineering Intern, eCommerce Experiences</p>\n                            <p className=\"info\">May 2022 - August 2022</p> */}\n\n                            <h1 className=\"major\">Infinite Options LLC</h1>\n                            <p className=\"minor\">Front-End Development Intern</p>\n                            <p className=\"info\">May 2021 - August 2021</p>\n                            <p className=\"info\">\n                                During the summer of 2021, I had the opportunity to intern at Infinite \n                                Options LLC as a Front-End Development Intern where I helped develop \n                                some of their in-house projects, such as Meals For Me and Serving Fresh, \n                                and more.\n                                <br/>\n                                <br/>\n                                As a member of the front-end development team, I was responsible for the \n                                development, maintenance, and quality assurance of our in-house products. \n                                Working with React, I developed features ranging from implementing UI's to \n                                integrating API's.\n                            </p>\n                        </div>\n\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Organizations</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Hong Kong Students Association</h1>\n                            <p className=\"info\">Treasurer • Executive Committee</p>\n                            <p className=\"info\">August 2019 - May 2021</p>\n                            <p className=\"info\">\n                                I joined HKSA as a treasurer intern in January of 2019. As the treasurer of HKSA,\n                                I was responsible for the financials of the organization including securing of funds\n                                and approving the projects of our event coordinators.\n                                <br/><br/>\n                                As a member of the Executive Comittee, I was responsible for approving our organizations\n                                agenda as well as managing relations between other branches of HKSA.\n                            </p>\n                        </div>\n\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Skills</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <SkillBar name=\"Java\" percent=\"55\" className=\"major\"/>\n                            <SkillBar name=\"C++\" percent=\"60\" className=\"major\"/>\n                            <SkillBar name=\"Python\" percent=\"85\" className=\"major\"/>\n                            <SkillBar name=\"HTML\" percent=\"70\" className=\"major\"/>\n                            <SkillBar name=\"CSS\" percent=\"50\" className=\"major\"/>\n                            <SkillBar name=\"JavaScript\" percent=\"70\" className=\"major\"/>\n                            <SkillBar name=\"React\" percent=\"90\" className=\"major\"/>\n                            <SkillBar name=\"Git\" percent=\"65\" className=\"major\"/>\n                            <SkillBar name=\"MATLAB\" percent=\"45\" className=\"major\"/>\n                        </div>\n                        \n                        \n                    </div>\n                </Fade>\n            {/* </HideBetween> */}\n            <div className=\"navPadding\"/>\n        </div>    \n    )\n}\n\nexport default Resume;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/TestSpace.js",["99","100","101","102","103","104","105","106"],"import ParticlesBg from \"particles-bg\";\nimport { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport {useEffect, useState} from \"react\";\nimport ReactSlider from \"react-slider\";\nimport axios from \"axios\";\n\nimport SkillBar from \"./skill_bar/SkillBar\"\n\nfunction TestSpace() {\n\n    const[sliderVal, changeSlider] = useState(50);\n    const[searchTerm, changeSearch] = useState(\"\");\n\n    var rgbColor = ''\n\n    if (sliderVal >= 50) {\n        rgbColor = `rgb(${-510/100 * (sliderVal-100)},255,0)`\n    } else {\n        rgbColor = `rgb(255,${510/100 * sliderVal},0)`\n    }\n\n    // window.scrollTo(0, 0);\n    return(\n        <div>\n            <div className=\"testLanding\">\n                <ParticlesBg type=\"cobweb\" color=\"#0055A2\" bg={true} style={{height:'100vh'}} num={420}/>\n                <div className='Title'>\n                    Congratulations! You found my secret testing area.\n                </div>\n                <div className=\"message\">\n                    There isn't really much for you to see here unless you \n                    want to see what I am working on. You're welcome to stay \n                    but if you want to leave, click the button below. Otherwise,\n                    keep on scrolling.\n                </div>\n                <div className='navPadding'/>\n                <a href='/' className=\"downloadButton\">Return to the main page</a>\n            </div>\n\n            <div className=\"MainContent\" >\n                \n                <div className=\"gridWrapper\">\n                    <div className=\"gridBoxMobile\">\n                        \n\n                        <div className='navPadding'/>\n\n                        <h1 style={{fontSize:'28px'}}>Skill Bar</h1>\n                        <h1 style={{textTransform: 'none'}}>\n                            This is a custom component that can be used to display percentages as \n                            progress bars.\n                        </h1>\n                        <h1 style={{textTransform: 'none'}}>\n                            The progress bars take the following props:\n                            <li>\n                                name (title above skill)\n                            </li>\n                            <li>\n                                percent (amount of bar filled, random when empty)\n                            </li>\n                            <li>\n                                color (color of bar, random when empty)\n                            </li>\n                            <li>\n                                enableAbility (skill marker underneath bar, adjusts to percent levels)\n                            </li>\n                        </h1>\n\n                        <SkillBar name=\"Skill 1\" percent=\"70\" color=\"#F26522\"/>\n                        \n                        <SkillBar name=\"Skill 2\" percent=\"30\" color=\"maroon\" enableAbility={true}/>\n\n                        <SkillBar name=\"Skill 3\" percent=\"80\" color=\"forestgreen\" enableAbility={true}/>\n                        \n                        <SkillBar name=\"Skill 4 (use slider to adjust)\" percent={sliderVal}  color={rgbColor} enableAbility={true}/>\n                        <ReactSlider \n                            min={0} \n                            max={100} \n                            className=\"horizontal-slider\" \n                            thumbClassName=\"example-thumb\" \n                            trackClassName=\"example-track\"\n                            defaultValue={sliderVal}\n                            onChange={(value) => {\n                                    changeSlider(value)\n                                    console.log(value)\n                                }\n                            }\n                        />\n                        <div style={{width:'100%', height:\"30px\"}}/>\n                    </div>\n                </div>\n                {/* <SkillBar skill=\"Testing\" progress=\"95\" color=\"#F26522\"/>\n                <SkillBar skill=\"Testing1\" progress=\"40\" color=\"yellow\"/> */}\n            </div>\n\n            <div>\n                <input \n                    type=\"text\"\n                    onChange={(e) => {\n                            changeSearch(e.target.value)\n                            // console.log(e.target.value)\n                        }\n                    }\n                />\n                <button\n                    onClick={() => {\n                        axios.get(\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\"+searchTerm)\n                        .then((response) => {\n                            console.log(response.data.drinks)\n                        })\n                    }}\n                >\n                    Test\n                </button>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default TestSpace;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Portfolio.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import {React, useEffect, useState}from \"react\";\nimport Fade from \"react-reveal\";\nimport {\n    HideBetween,\n    HideDuring,\n    HideOn,\n    HideScroll,\n  } from \"react-hide-on-scroll\";\n\nimport M4ME from \"./Images/M4ME.png\"\nimport Manifest from \"./Images/Manifest.png\"\nimport SF from \"./Images/SF.png\"\nimport Ship from \"./Images/Ship.png\"\nimport Spheres from \"./Images/Spheres.jpg\"\nimport WordlePic from \"./Images/Wordle.jpg\"\n\nimport axios from \"axios\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n\nfunction Portfolio() {\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [cocktailImg, setCocktailImage] = useState(\"\");\n\n    useEffect(() => {\n\n        axios.get(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\n        .then(\n            (response) => {\n                // console.log(response.data.drinks[0].strDrinkThumb)\n                setCocktailImage(response.data.drinks[0].strDrinkThumb)\n            }\n        )\n        .catch((e) => {\n            console.log(e)\n        })\n\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    if(windowDimensions.width <= 700){\n        return(\n            <div id=\"portfolio\" className=\"MainContent\">\n            <div className=\"navPadding\"/>\n            {/* <HideOn divID=\"resume\" inverse> */}\n                {/* <Fade> */}\n                    <div className=\"gridWrapper\">\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Web Development</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div>\n                                <img src={M4ME} className=\"gridBoxMobile\" style={{width:'100%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Meals For Me (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Meals For Me is a meal subscription service from Infinite Options written in \n                                javascript and React. While I was on this project, I was responsible for \n                                maintaining customer-facing components as well as developing some of the \n                                employee-facing tools. On this project, I developed a tool to confirm delivery \n                                addresses with the United-States Postal Service and a tool to manage Meals For \n                                Me's delivery zones.\n                            </p>\n\n                            <a href=\"https://mealsfor.me/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div>\n                                <img src={SF} className=\"gridBoxMobile\" style={{width:'100%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Serving Fresh (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Serving Fresh is a delivery service written in javascript and React that brings \n                                farmer market produce to your door. While I was on this project, I was responsible \n                                for taking the same zones management system I implemented for Meals For Me and \n                                implementing it for Serving Fresh. This component is solely employee-facing but \n                                feel free to check out their site.\n                            </p>\n\n                            <a href=\"https://servingfresh.me/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div>\n                                <img src={Manifest} style={{width:'100%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Manifest (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Manifest is a productivity app developed in a collaboration with Infinite Options and \n                                Tulane University that allows people with short-term memory loss gain control of their \n                                lives. I helped develop their admin site written in javascript and React which allowed \n                                advisors of patients manage their patients.\n                            </p>\n\n                            <a href=\"https://manifestmy.space/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile navPadding\"/>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Software Development</h1>\n                            </div>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle\">\n                                <img src={Spheres} style={{width:'100%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Ray Tracer</h1>\n                            <p className=\"minor\">\n                                The image on the left was rendered with a raytracer coded in C++ and the openFrameworks \n                                library. The raytracer uses a basic raytracing algorithm to shoot a ray from the camera, \n                                check which object it colides with, and sets the pixel in the image to the proper color. \n                                The code can be found on the Github below.\n                            </p>\n\n                            <a href=\"https://github.com/KayToo2022/RayTracer\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle\">\n                                <img src={Ship} style={{width:'100%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Flight Simulation Demo</h1>\n                            <p className=\"minor\">\n                                This flight simulation demo was coded in C++ and the openFrameworks library. It is a simple \n                                game where the player is tasked with landing their ship into a designated landing zone with \n                                a set amount of fuel. The ship on the right is the model of the ship in the demo. The code \n                                can be found on the Github below.\n                            </p>\n\n                            <a href=\"https://github.com/KayToo2022/MarsLander\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">AI Hangman</h1>\n                            <p className=\"minor\">\n                            The AI Hangman project was a study in how different AI approaches can be used in the game of hangman \n                            with both a simple approach and a complex approach in Python. The study used an iterative approach and \n                            a Q-table approach to the game of hangman. The code is not public but the writeup of the project is \n                            available in the link below.\n                            </p>\n\n                            <a href=\"https://docs.google.com/document/d/1uLRyhk7xVR71vjlAi87KWIVEYBNGnM4Zs-OLRljIFlk/edit?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Tinnitus Clinical System</h1>\n                            <p className=\"minor\">\n                                The Tinnitus Clinic System project was a study of object oriented design and how it can be applied, \n                                in this case, to a tinnitus clinic. This project's code is not public but the writeup of the project \n                                showcasing UML diagrams of the project is available in the link below.\n                            </p>\n\n                            <a href=\"https://docs.google.com/document/d/17ze1Y0i_vfi8gkIPhUZzENQOjgJuQS4vXhX-iG-JO-E/edit?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile navPadding\"/>\n                        <div className=\"gridBoxMobile\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Personal Projects</h1>\n                            </div>    \n                        </div>\n                        \n                        <div className=\"gridBoxMobile\">\n                            <div>\n                                <img src={cocktailImg} className=\"gridBoxMobile\" style={{width:'100%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Cocktail Recipes</h1>\n                            <p className=\"minor\" style={{color: \"gray\"}}>\n                                A cocktail recipe page powered by the CocktailDB API over \n                                at <a style={{color: \"gray\"}} href='https://www.thecocktaildb.com/api.php'>TheCocktailDB</a>. (no affiliation)\n                                This page lets you search for cocktails by name or by ingredient and allows you to pull up the recipe with no ads and no backstory.\n                                Just the ingredients, the instructions, and you.\n                            </p>\n\n                            <a href=\"/#/cocktails\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <div>\n                                <img src={WordlePic} className=\"gridBoxMobile\" style={{width:'100%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxMobile\">\n                            <h1 className=\"major\">Wordle Sim</h1>\n                            <p className=\"minor\">\n                                An unlimited Wordle-like game for all of your word game needs. Wordle Sim is a Worldle-like clone that allows for limitless gameplay.\n                                Challenge yourself to guess the word as fast as possible or share your word with friends to see who is the faster wordler.\n                            </p>\n\n                            <a href=\"/#/wordle\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                    </div>\n                {/* </Fade> */}\n            {/* </HideOn> */}\n            <div className=\"navPadding\"/>\n        </div>    \n        )\n    }\n\n    return(\n        <div id=\"portfolio\" className=\"MainContent\">\n            <div className=\"navPadding\"/>\n            {/* <HideOn divID=\"resume\" inverse> */}\n                <Fade>\n                    <div className=\"gridWrapper\">\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Web Development</h1>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={M4ME} style={{width:'50%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Meals For Me (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Meals For Me is a meal subscription service from Infinite Options written in \n                                javascript and React. While I was on this project, I was responsible for \n                                maintaining customer-facing components as well as developing some of the \n                                employee-facing tools. On this project, I developed a tool to confirm delivery \n                                addresses with the United-States Postal Service and a tool to manage Meals For \n                                Me's delivery zones.\n                            </p>\n\n                            <a href=\"https://mealsfor.me/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={SF} style={{width:'50%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Serving Fresh (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Serving Fresh is a delivery service written in javascript and React that brings \n                                farmer market produce to your door. While I was on this project, I was responsible \n                                for taking the same zones management system I implemented for Meals For Me and \n                                implementing it for Serving Fresh. This component is solely employee-facing but \n                                feel free to check out their site.\n                            </p>\n\n                            <a href=\"https://servingfresh.me/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={Manifest} style={{width:'50%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Manifest (Infinite Options)</h1>\n                            <p className=\"minor\">\n                                Manifest is a productivity app developed in a collaboration with Infinite Options and \n                                Tulane University that allows people with short-term memory loss gain control of their \n                                lives. I helped develop their admin site written in javascript and React which allowed \n                                advisors of patients manage their patients.\n                            </p>\n\n                            <a href=\"https://manifestmy.space/\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL navPadding\"/>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Software Development</h1>\n                            </div>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={Spheres} style={{width:'50%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Ray Tracer</h1>\n                            <p className=\"minor\">\n                                The image on the left was rendered with a raytracer coded in C++ and the openFrameworks \n                                library. The raytracer uses a basic raytracing algorithm to shoot a ray from the camera, \n                                check which object it colides with, and sets the pixel in the image to the proper color. \n                                The code can be found on the Github below.\n                            </p>\n\n                            <a href=\"https://github.com/KayToo2022/RayTracer\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={Ship} style={{width:'50%', marginTop:'16px', backgroundColor:'white'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Flight Simulation Demo</h1>\n                            <p className=\"minor\">\n                                This flight simulation demo was coded in C++ and the openFrameworks library. It is a simple \n                                game where the player is tasked with landing their ship into a designated landing zone with \n                                a set amount of fuel. The ship on the right is the model of the ship in the demo. The code \n                                can be found on the Github below.\n                            </p>\n\n                            <a href=\"https://github.com/KayToo2022/MarsLander\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">AI Hangman</h1>\n                            <p className=\"minor\">\n                            The AI Hangman project was a study in how different AI approaches can be used in the game of hangman \n                            with both a simple approach and a complex approach in Python. The study used an iterative approach and \n                            a Q-table approach to the game of hangman. The code is not public but the writeup of the project is \n                            available in the link below.\n                            </p>\n\n                            <a href=\"https://docs.google.com/document/d/1uLRyhk7xVR71vjlAi87KWIVEYBNGnM4Zs-OLRljIFlk/edit?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Tinnitus Clinical System</h1>\n                            <p className=\"minor\">\n                                The Tinnitus Clinic System project was a study of object oriented design and how it can be applied, \n                                in this case, to a tinnitus clinic. This project's code is not public but the writeup of the project \n                                showcasing UML diagrams of the project is available in the link below.\n                            </p>\n\n                            <a href=\"https://docs.google.com/document/d/17ze1Y0i_vfi8gkIPhUZzENQOjgJuQS4vXhX-iG-JO-E/edit?usp=sharing\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL navPadding\"/>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle underlined\">\n                                <h1>Personal Projects</h1>\n                            </div>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={cocktailImg} style={{width:'50%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Cocktail Recipes</h1>\n                            <p className=\"minor\">\n                                A cocktail recipe page powered by the CocktailDB API over \n                                at <a style={{color: \"gray\"}} href='https://www.thecocktaildb.com/api.php'>TheCocktailDB</a>. (no affiliation)\n                                This page lets you search for cocktails by name or by ingredient and allows you to pull up the recipe with no ads and no backstory.\n                                Just the ingredients, the instructions, and you.\n                            </p>\n\n                            <a href=\"/#/cocktails\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                        <div className=\"gridBoxL\">\n                            <div className=\"resumeTitle\">\n                                <img src={WordlePic} style={{width:'50%', marginTop:'16px'}}></img>\n                            </div>    \n                        </div>\n                        <div className=\"gridBoxR\">\n                            <h1 className=\"major\">Wordle Sim</h1>\n                            <p className=\"minor\">\n                                An unlimited Wordle-like game for all of your word game needs. Wordle Sim is a Worldle-like clone that allows for limitless gameplay.\n                                Challenge yourself to guess the word as fast as possible or share your word with friends to see who is the faster wordler.\n                            </p>\n\n                            <a href=\"/#/wordle\" target=\"_blank\" className=\"downloadButton\">\n                                Learn More\n                            </a>\n                        </div>\n                    </div>\n                </Fade>\n            {/* </HideOn> */}\n            <div className=\"navPadding\"/>\n        </div>    \n    )\n}\n\nexport default Portfolio;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/skill_bar/SkillBar.js",["139"],"import \"./SkillBar.css\"\n\nfunction SkillBar(props) {\n    // if (props.name == null || props.percent == null) {\n    //     return null\n    // }\n    var percent = props.percent;\n    var color = props.color;\n    var ability = '';\n\n    console.log(color)\n\n    if (props.percent == null) {\n        percent = Math.random() * 100\n    }\n\n    if (props.color == null) {\n        color= `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`\n    }\n\n    if (props.enableAbility == true) {\n        if (percent < 20) {\n            ability = \"Beginner\"\n        }\n        if (percent >= 20) {\n            ability = \"Novice\"\n        }\n        if (percent >= 40) {\n            ability = \"Average\"\n        }\n        if (percent >= 60) {\n            ability = \"Good\"\n        }\n        if (percent >= 70) {\n            ability = \"Comptent\"\n        }\n        if (percent >= 80) {\n            ability = \"Proficient\"\n        }\n        if (percent >= 90) {\n            ability = \"Excellent\"\n        }\n        // if (percent >= 95) {\n        //     ability = \"Advanced\"\n        // }\n    }\n\n    return(\n        <div style={{width: '100%'}}>\n            <h1 style={{marginTop: '20px'}} className={props.className}>{props.name}</h1>\n            <div style={{width: '100%', height: '42px'}}>\n                <div style={{backgroundColor:`${color}`, width: `${percent}%`, height: '42px', float: 'left'}}/>\n                <div style={{backgroundColor:'gray', width: `${100 - percent}%`, height: '42px', float: 'left'}}/>\n                \n            </div>\n            {\n                props.enableAbility\n                    ? (\n                        <div style={{width: '100%', height: '20px'}}>\n                            <div style={{transform: `translateX(${percent}%)`}}>\n                                <div style={{width: '10%', transform: `translateX(-50%)`, textAlign:'center'}}>\n                                    {ability}\n                                </div>\n                                \n                            </div>\n                        </div>\n                    )\n                    : null\n            }\n            \n            \n        </div>\n    )\n}\n\nexport default SkillBar;","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Cocktails.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import ParticlesBg from \"particles-bg\";\nimport { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport Fade from \"react-reveal\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Cocktails() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    const [searchTerm, changeSearch] = useState(\"\");\n    const [cocktailList, setCocktailList] = useState([]);\n    const [listLength, setListLength] = useState(0);\n    const [showDrink, setShowDrink] = useState(false);\n    const [currentDrink, setCD] = useState(-1);\n    const [searchBy, setSB] = useState(\"search.php?s\");\n\n    const [cDJSON, setCDJSON] = useState(null);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    const runSearch = () => {\n        console.log(\"running search\")\n        if (searchTerm != \"\") {\n            axios.get(\"https://www.thecocktaildb.com/api/json/v1/1/\" + searchBy + \"=\" + searchTerm)\n\n                .then((response) => {\n                    console.log(response.data.drinks)\n                    setCocktailList(response.data.drinks)\n                    setListLength(response.data.drinks.length)\n                })\n        } else {\n            setCocktailList([])\n            setListLength(0)\n        }\n    }\n\n    const searchByID = (id) => {\n        console.log(id)\n        axios.get(\"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\"+id.toString())\n                .then((response) => {\n                    console.log(response.data.drinks[0])\n                    \n                    setCDJSON(response.data.drinks[0])\n                    setShowDrink(true)\n                    //working\n                    // setCocktailList(response.data.drinks)\n                    // setListLength(response.data.drinks.length)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n    }\n\n    const drinkListRendered = () => {\n        if (cocktailList == null) {\n            return null\n        }\n\n        if (cocktailList.length == 1 || windowDimensions.width < 900) {\n            const drinks = cocktailList.map((d) => (\n                <div\n                    style={{\n                        width: \"60%\",\n                        height: \"auto\",\n                        marginLeft: \"20%\",\n                        marginRight: \"20%\",\n                        marginBottom: \"5%\",\n                        backgroundColor: \"black\",\n                        float: 'left',\n                    }}\n                    onClick={() => {\n                        if (searchBy == \"search.php?s\") {\n                            setShowDrink(true)\n                            setCD(cocktailList.indexOf(d))\n                        } else {\n                            searchByID(d.idDrink)\n                        }\n                    }}\n                >\n                    <img style={{ height: '100%', width: '100%', objectFit: \"contain\" }} src={d.strDrinkThumb} />\n                    <div style={{ width: \"80%\", marginLeft: \"10%\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\", lineHeight: \"1.5em\", height: \"1.5em\" }}>\n                        {d.strDrink}\n                    </div>\n\n                </div>\n            ))\n\n            return drinks\n        } else if (cocktailList.length == 2) {\n            const drinks = cocktailList.map((d) => (\n                <div\n                    style={{\n                        width: \"45%\",\n                        marginLeft: \"2.5%\",\n                        marginRight: \"2.5%\",\n                        marginBottom: \"5%\",\n                        backgroundColor: \"black\",\n                        float: 'left',\n                    }}\n                    onClick={() => {\n                        if (searchBy == \"search.php?s\") {\n                            setShowDrink(true)\n                            setCD(cocktailList.indexOf(d))\n                        } else {\n                            searchByID(d.idDrink)\n                        }\n                    }}\n                >\n                    <img style={{ height: '100%', width: '100%', objectFit: \"contain\" }} src={d.strDrinkThumb} />\n                    <div style={{ width: \"80%\", marginLeft: \"10%\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\", lineHeight: \"1.5em\", height: \"1.5em\" }}>\n                        {d.strDrink}\n                    </div>\n\n                </div>\n            ))\n\n            return drinks\n        } else {\n            const drinks = cocktailList.map((d) => (\n                <div\n                    style={{\n                        width: \"28%\",\n                        marginLeft: \"2.5%\",\n                        marginRight: \"2.5%\",\n                        marginBottom: \"5%\",\n                        backgroundColor: \"black\",\n                        float: 'left',\n\n                    }}\n                    onClick={() => {\n                        // working here\n                        console.log(cocktailList.indexOf(d))\n                        console.log(d)\n                        if (searchBy == \"search.php?s\") {\n                            setShowDrink(true)\n                            setCD(cocktailList.indexOf(d))\n                        } else {\n                            searchByID(d.idDrink)\n                            // setShowDrink(true)\n                        }\n                    }}\n                >\n                    <img style={{ height: '100%', width: '100%', objectFit: \"contain\" }} src={d.strDrinkThumb} />\n                    <div style={{ width: \"80%\", marginLeft: \"10%\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\", lineHeight: \"1.5em\", height: \"1.5em\" }}>\n                        {d.strDrink}\n                    </div>\n\n                </div>\n            ))\n\n            return drinks\n        }\n\n    }\n\n    const ingredientsRendered = (cd) => {\n        const ing = cd.map((i) => (\n            <li>\n                {i}\n            </li>\n        ))\n\n        return ing\n    }\n\n    const instructionsRendered = (cd) => {\n        const ins = cd.map((i) => (\n            <li>\n                {i}\n            </li>\n        ))\n\n        return ins\n    }\n\n    const parseDrink = (cd) => {\n        // var cd = cocktailList[currentDrink]\n        \n        var ingredientsList = []\n        var measurementsList = []\n        var stepList = []\n\n        for (var name in cd) {\n            if (name.startsWith(\"strIngredient\") && cd[name] != null) {\n                ingredientsList.push(cd[name])\n            }\n\n            if (name.startsWith(\"strMeasure\") && cd[name] != null) {\n                measurementsList.push(cd[name])\n            }\n\n            if (name == \"strInstructions\" && cd[name] != null) {\n                stepList = cd[name].split('.')\n            }\n        }\n\n        console.log(ingredientsList)\n        console.log(measurementsList)\n        console.log(stepList)\n\n        var stepList2 = []\n\n        stepList.forEach(element => {\n            if (element != \"\") {\n                stepList2.push(element)\n            }\n        });\n\n        var combinedIngredients = []\n\n        for (let i = 0; i < ingredientsList.length; i++) {\n            if (measurementsList[i] && ingredientsList[i]) {\n                if (measurementsList[i].endsWith(' ')) {\n                    combinedIngredients.push(measurementsList[i] + ingredientsList[i])\n                } else {\n                    combinedIngredients.push(measurementsList[i] + \" \" + ingredientsList[i])\n                }\n            }\n            if (ingredientsList[i] && !measurementsList[i]) {\n                \n                combinedIngredients.push(ingredientsList[i])\n\n            }\n        }\n\n        console.log(combinedIngredients)\n\n        var retDrink = {\n            name: cd.strDrink,\n            strDrinkThumb: cd.strDrinkThumb,\n            strGlass: cd.strGlass,\n            ingredients: combinedIngredients,\n            steps: stepList2\n        }\n\n        console.log(retDrink)\n        return retDrink\n    }\n\n    const drinkModal = () => {\n\n        if (!showDrink) {\n            return null\n        } else {\n            var cd = null\n            if (searchBy == \"search.php?s\") {\n                cd = parseDrink(cocktailList[currentDrink])\n            } else {\n                var cd0 = cDJSON\n                cd = parseDrink(cd0)\n            }\n            console.log(cd)\n            // var cd = parseDrink(cocktailList[currentDrink])\n            // console.log(cocktailList[currentDrink])\n            if (windowDimensions.width > 900) {\n                return (\n                    <div\n                        style={{\n                            height: \"100%\",\n                            width: \"100%\",\n                            zIndex: \"101\",\n                            left: \"0\",\n                            top: \"0\",\n                            overflow: \"auto\",\n                            position: \"fixed\",\n                            display: \"grid\",\n                            backgroundColor: \"rgba(24, 25, 26, 0.8)\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                position: \"relative\",\n                                justifySelf: \"center\",\n                                alignSelf: \"center\",\n                                display: \"block\",\n                                backgroundColor: \"black\",\n                                height: \"auto\",\n                                width: \"80vw\",\n                                zIndex: \"102\",\n                            }}\n                        >\n                            <div style={{ width: \"40%\", height: \"100%\", float: \"left\" }}>\n\n\n                                <img style={{ marginTop: \"10%\", width: '80%', objectFit: \"contain\", border: \"3px solid #cdab4b\", }} src={cd.strDrinkThumb} />\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    margin: \"5% 0% 10% 10%\",\n                                    fontStyle: \"italic\"\n                                }}>\n                                    <div>\n                                        {cd.name}\n                                    </div>\n\n                                    <div>\n                                        Glassware: {cd.strGlass}\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div style={{ width: \"60%\", height: \"100%\", float: \"left\" }}>\n                                <div\n                                    style={{\n                                        textAlign: \"right\",\n                                        fontWeight: \"bolder\",\n                                        height: \"10%\",\n                                        fontSize: \"40px\",\n                                        marginRight: \"5px\",\n                                    }}\n                                    onClick={() => {\n                                        setCD(-1)\n                                        setShowDrink(false)\n                                    }}\n                                >\n                                    &#215;\n                                </div>\n\n                                <div style={{ textAlign: 'left', fontWeight: \"bold\", color: \"#cdab4b\" }}>Ingredients</div>\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    marginRight: \"10%\"\n                                }}>\n\n                                    <ul style={{ textAlign: 'left', fontStyle: \"italic\" }}>\n                                        {ingredientsRendered(cd.ingredients)}\n                                    </ul>\n                                </div>\n\n                                <div style={{ textAlign: 'left', fontWeight: \"bold\", color: \"#cdab4b\" }}>Instructions</div>\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    marginRight: \"10%\"\n                                }}>\n\n                                    <ol style={{ textAlign: 'left', fontStyle: \"italic\" }}>\n                                        {instructionsRendered(cd.steps)}\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div\n                        style={{\n                            height: \"100%\",\n                            width: \"100%\",\n                            zIndex: \"101\",\n                            left: \"0\",\n                            top: \"0\",\n                            overflow: \"auto\",\n                            position: \"fixed\",\n                            display: \"grid\",\n                            backgroundColor: \"rgba(24, 25, 26, 0.8)\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                position: \"relative\",\n                                justifySelf: \"center\",\n                                alignSelf: \"center\",\n                                display: \"block\",\n                                backgroundColor: \"black\",\n                                height: \"auto\",\n                                width: \"80vw\",\n                                zIndex: \"102\",\n                            }}\n                        >\n                            <div style={{ width: \"100%\", height: \"100%\", float: \"left\" }}>\n                                <div\n                                    style={{\n                                        textAlign: \"right\",\n                                        fontWeight: \"bolder\",\n                                        height: \"10%\",\n                                        fontSize: \"40px\",\n                                        marginRight: \"5px\",\n                                    }}\n                                    onClick={() => {\n                                        setCD(-1)\n                                        setShowDrink(false)\n                                    }}\n                                >\n                                    &#215;\n                                </div>\n\n                                <img style={{ marginTop: \"0%\", width: '80%', objectFit: \"contain\", border: \"3px solid #cdab4b\", }} src={cd.strDrinkThumb} />\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    margin: \"5% 0% 10% 10%\",\n                                    fontStyle: \"italic\"\n                                }}>\n                                    <div>\n                                        {cd.name}\n                                    </div>\n\n                                    <div>\n                                        Glassware: {cd.strGlass}\n                                    </div>\n                                </div>\n\n\n\n                                <div style={{ textAlign: 'left', fontWeight: \"bold\", color: \"#cdab4b\", margin: \"2.5% 0% 0% 10%\", }}>Ingredients</div>\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    margin: \"2.5% 0% 0% 10%\"\n                                }}>\n\n                                    <ul style={{ textAlign: 'left', fontStyle: \"italic\" }}>\n                                        {ingredientsRendered(cd.ingredients)}\n                                    </ul>\n                                </div>\n\n                                <div style={{ textAlign: 'left', fontWeight: \"bold\", color: \"#cdab4b\", margin: \"2.5% 0% 0% 10%\" }}>Instructions</div>\n\n                                <div style={{\n                                    borderLeft: \"2px solid #cdab4b\",\n                                    margin: \"2.5% 10% 10% 10%\"\n                                }}>\n\n                                    <ol style={{ textAlign: 'left', fontStyle: \"italic\" }}>\n                                        {instructionsRendered(cd.steps)}\n                                    </ol>\n                                </div>\n                            </div>\n\n\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n\n    return (\n        <div>\n            {drinkModal()}\n            \n            <div className=\"testLanding\" style={{height: \"80vh\"}}>\n                {(windowDimensions.width > 900) ? (\n                    <ParticlesBg type=\"cobweb\" color={[\"#cdab4b\"]} bg={{ position: \"absolute\", zIndex: -1, top: 0, left: 0, backgroundColor: \"black\" }} num={300} />\n                ) : (\n                    <ParticlesBg type=\"cobweb\" color={[\"#cdab4b\"]} bg={{ position: \"absolute\", zIndex: -1, top: 0, left: 0, backgroundColor: \"black\" }} num={100} />\n                )}\n                <Fade>\n                    <div className='Title'>\n                        Cocktail Recipies\n                    </div>\n\n                    {(windowDimensions.width > 900) ? (\n                        <div className=\"message\">\n                            If you are reading this, you are either a hiring manager who has read through so many resumes and probably needs a drink, or you are me.\n                            In case you are the prior, this little page allows you to look up cocktail recipies from a public API from https://www.thecocktaildb.com/.\n                        </div>\n                    ) : (<div />)}\n\n                    <div className='navPadding' />\n\n                    <Link className=\"ctButton\" to=\"content\" smooth={true} duration={500} spy={true} style={{ height: 'auto' }}>Click here to get started</Link>\n                    <div className=\"message\" style={{ height: 'auto', marginLeft:\"auto\", marginRight:\"auto\"}}>or</div>\n                    <a href='/' className=\"ctButton\">Return to the main page</a>\n\n\n                    \n                    \n                </Fade>\n            </div>\n\n            <div id=\"content\" style={{ backgroundColor: 'black', display: \"inline-block\", width: \"100vw\" }}>\n\n\n                <div style={{ width: \"76%\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"2.5%\", float: \"center\" }}>\n\n                    \n\n                    <div style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                        <div\n                            className=\"ctButton\"\n                            style={{float: \"left\", padding: \"11px\"}}\n                            onClick={() => {\n                                runSearch()\n                            }}\n                        >\n                            Search\n                        </div>\n\n                        <input\n                            className=\"ctButton\"\n                            style={{margin: \"none\", marginTop:\"0\", float: \"left\", border: \"none\", backgroundColor: \"white\", color: \"black\", padding: \"12px\"}}\n                            type=\"text\"\n                            onChange={(e) => {\n                                console.log(e.target.value)\n                                changeSearch(e.target.value)\n                            }}\n                            onKeyPress={(e) => {\n                                if (e.key === 'Enter') {\n                                    runSearch();\n                                }\n                            }}\n                        />\n                    </div>\n\n                    <br/>\n                    <br/>\n                    \n                    <div style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                        <div style={{float: \"left\", color: \"#cdab4b\", font: \"18px sans-serif\", letterSpacing: \"1px\", padding: \"10px\"}}>\n                            Filter:\n                        </div>\n                        <select className=\"ctDropdown\" style={{float: \"left\", margin: \"10px\"}} onChange={(e) => {\n                            setSB(e.target.value)\n                        }}>\n                            <option value={\"search.php?s\"}>\n                                Name\n                            </option>\n                            <option value={\"filter.php?i\"}>\n                                Ingredient\n                            </option>\n                        </select>\n                    </div>\n                    \n                        {/* <div style={{ float: \"left\", border: \"none\" }}>\n                            {listLength} results\n                        </div>\n                        <div className='navPadding' />\n                        <div className=\"message\" style={{ width: \"100%\", textAlign: \"center\" }}>\n                            When searching by name, you can click on the image to pull up the recipe.\n                        </div> */}\n                    \n                    \n\n\n                   \n\n                    {/* {(windowDimensions.width > 900) ? (\n                        <div\n                            style={{ float: \"left\", marginRight: \"2.5%\" }}\n                        >\n                            Filter by:\n                        </div>\n                    ) : (<div />)} */}\n\n                    \n\n                </div>\n\n                <br />\n                <br />\n                <div style={{\n                    width: \"80%\",\n                    marginTop: \"20px\",\n                    marginLeft: \"10%\",\n                    backgroundColor: \"black\",\n                }}>\n                    {drinkListRendered()}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Cocktails","/Users/ktu/Documents/KayToo2022.github.io/src/Components/Wordle.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport rs from \"random-seed\"\nimport words1 from \"./files/shuffled_real_wordles.txt\"\nimport words2 from \"./files/combined_wordlist.txt\"\nimport { Navigate, useParams } from \"react-router\";\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction Wordle() {\n\n    const [devTools, toggleDev] = useState(0);\n    const [hardReset, toggleHardReset] = useState(0);\n\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const [currentWord, setWord] = useState(\"\");\n    const [currentGuess, setGuess] = useState(\"\");\n    const [guessCount, setCount] = useState(0);\n    const [guessHistory, setHistory] = useState([]);\n    const [win, setWin] = useState(false);\n    \n\n    const [rightLetters, setRight] = useState([]);\n    const [missedLetters, setMissed] = useState([]);\n    const [wrongLetters, setWrong] = useState([]);\n\n    const [winCount, setWinCount] = useState(0);\n    const [winStreak, setWinStreak] = useState(0);\n\n    const [wordBank, setWordBank] = useState([]);\n    const [guessBank, setGuessBank] = useState([]);\n\n    const [showWord, toggleShowWord] = useState(false);\n    const [showIssue, toggleIssue] = useState(false);\n\n    const [started, toggleStarted] = useState(false);\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(0);\n    const [totalTime, setTotalTime] = useState(0);\n\n    const [issue, setIssue] = useState(\"\")\n\n    const [seed, setSeed] = useState(0)\n\n    var gen = require('random-seed')\n\n    const [wordSeed, setWordSeed] = useState(0)\n    const [tempSeed, submitSeed] = useState(0)\n    const [parsedSeed, setParsedSeed] = useState(-1)\n\n    const kbTop = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p']\n    const kbMid = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l']\n    const kbBot = ['z', 'x', 'c', 'v', 'b', 'n', 'm'] \n\n    var urlData = window.location.href\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n\n        var urlSplit = urlData.split(\"wordle/\")\n\n\n\n        // if (!isNaN(parseInt(useParams().id))) {\n        //     var seedData = parseInt(useParams().id)\n        //     setParsedSeed(seedData)\n        // }\n\n        if (urlSplit.length > 1){\n            var seedData = parseInt(urlSplit[1])\n            setParsedSeed(seedData)\n        }\n\n        if (document.cookie\n                .split(\";\")\n                .some(item => item.trim().startsWith(\"k2wsr=\"))) {\n                    var cookieData = document.cookie.split('; ').find(row => row.startsWith('k2wsr=')).split('=')[1].split(',')\n                    setWinCount(parseInt(cookieData[0]))\n                    setWinStreak(parseInt(cookieData[1]))\n        } else {\n            document.cookie= \"k2wsr=0,0\"\n        }\n        \n        fetch(words1)\n            .then(r => r.text())\n            .then(text => {\n                setWordBank(text.split('\\n'))\n            })\n\n        fetch(words2)\n            .then(r => r.text())\n            .then(text => {\n                setGuessBank(text.split('\\n'))\n            })\n        \n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n        function handleUrlChange() {\n            softReset()\n\n            urlData = window.location.href\n            var urlSplit = urlData.split(\"wordle/\")\n\n\n            if (urlSplit.length > 1) {\n                setSeed(parseInt(urlSplit[1]))\n            }\n\n        }\n        window.addEventListener(\n            'hashchange',\n            handleUrlChange,\n            false\n        );\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n\n        \n    }, []);\n\n\n    useEffect(() => {\n        var temp = 0\n\n        if (parsedSeed > -1) {\n            temp = parsedSeed\n            setParsedSeed(-1)\n        } else {\n            temp = Math.floor(Math.random() * 10000)\n        }\n        // var temp = Math.floor(Math.random() * 10000)\n        \n        setSeed(temp)\n\n    }, [wordBank])\n\n    useEffect(() => { \n        var randGen = gen(seed);\n        setWordSeed(randGen.range(wordBank.length))\n    }, [seed])\n\n    useEffect(() => {\n        generateWord()\n    }, [wordSeed])\n\n    useEffect(() => {\n        if (winCount != 0) {\n            document.cookie = `k2wsr=${winCount},${winStreak}`\n        }\n        \n    }, [winCount, winStreak]) \n\n    useEffect(() => {\n        if (started) {\n            var st = Date.now()\n            setStartTime(st)\n        } else {\n            var et = Date.now()\n            setStartTime(et)\n        }\n        \n    }, [started])\n\n    useEffect(() => {\n        if (endTime > startTime && win) {\n            console.log(endTime - startTime)\n            setTotalTime(endTime-startTime)\n        }\n    }, [endTime])\n\n    const generateWord = () => {\n        var rand = wordSeed\n        var word = wordBank[wordSeed]\n        //var word = wordBank[Math.floor(Math.random() * wordBank.length)]\n        setWord(word)\n    }\n\n    const softReset = () => {\n        generateWord()\n        setCount(0)\n        setHistory([])\n        setWin(false)\n        setGuess(\"\")\n        setRight([])\n        setWrong([])\n        setMissed([])\n        toggleShowWord(false)\n    }\n\n    const resetGame = () => {\n        \n        navigate('/wordle')\n        \n        generateWord()\n        setCount(0)\n        setHistory([])\n        setWin(false)\n        setGuess(\"\")\n        setRight([])\n        setWrong([])\n        setMissed([])\n        toggleShowWord(false)\n        if (seed.toString().length > 4) {\n            setSeed(seed + 1)\n        } else {\n            setSeed(Math.floor(Math.random() * 10000))\n        }\n        // setSeed(Math.floor(Math.random() * 10000))\n    }\n\n    const submitGuess = (guess) => {\n        if (!guess || guess.length != 5) {\n            setIssue(\"Guess must be 5 letters\")\n            toggleIssue(true)\n            console.log(\"Guess must be 5 letters\")\n        } else if (guessBank.indexOf(guess) < 0){\n            setIssue(\"Not a valid word\")\n            toggleIssue(true)\n            console.log(\"Not a word\")\n        } else {\n            setCount(guessCount + 1)\n            var ret = []\n            var didWin = true;\n\n            for (var i in guess) {\n                var val = -1\n                \n                if (guess[i] == currentWord[i]) {\n                    val = 1\n                } else if (currentWord.indexOf(guess[i]) >= 0) {\n                    val = 0\n                }\n\n                if (val != 1) {\n                    didWin = false\n                }\n\n                if (val == 1) {\n                    var tempRight = rightLetters\n                    tempRight.push(guess[i])\n                    setRight(tempRight)\n                }\n\n                if (val == 0) {\n                    var tempMissed = missedLetters\n                    tempMissed.push(guess[i])\n                    setMissed(tempMissed)\n                }\n\n                if (val == -1) {\n                    var tempWrong = wrongLetters\n                    tempWrong.push(guess[i])\n                    setWrong(tempWrong)\n                }\n                ret.push([guess[i], val])\n            }\n            \n\n            \n\n            setWin(didWin)\n            var tempHist = guessHistory\n            tempHist.push(ret)\n            setHistory(tempHist)\n            setGuess(\"\")\n            if (didWin) {\n                setWinCount(winCount + 1)\n                setWinStreak(winStreak + 1)\n                toggleStarted(false)\n                setEndTime(Date.now())\n                \n                // resetGame()\n            }\n            if (!didWin && guessCount >= 5) {\n                setWinStreak(0)\n                toggleShowWord(true)\n                toggleStarted(false)\n                setEndTime(Date.now())\n                \n                // resetGame()\n            }\n            \n        }\n        return ret\n    }\n\n    const renderGuesses = () => {\n        if (guessHistory.length == 0) {\n            return []\n        }\n\n        const guesses = guessHistory.map((g) => (\n            <div style={{width: \"100%\", marginBottom: \"4.5px\"}}>\n                {renderGuess(g)}\n            </div>\n        ))\n\n        // for (var i = 0; i < 6 - guesses.length; i++) {\n        //     guesses.push(<div style={{height: \"40px\", width: \"100%\"}}/>)\n        // }\n        return guesses\n    }\n\n    const renderGuess = (i) => {\n        const c = i.map((c) => (\n            (c[1] == 0) ? (\n                <div className=\"square\" style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}>\n                    <div className=\"content\">\n                        {c[0].toUpperCase()}\n                    </div>    \n                </div>\n            ) : (\n                (c[1] == 1) ? (\n                    <div className=\"square\"  style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>\n                    </div>\n                ) : (\n                    (c[1] == -1) ? (\n                        <div className=\"square\"  style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                            <div className=\"content\">\n                                {c[0].toUpperCase()}\n                            </div>\n                        </div>\n                    ) : (<div>error</div>)\n                )\n            )   \n        ))\n        return (\n            <div className=\"flexbox\">\n                {c}\n            </div>\n        )\n    }\n\n    const renderCurrent = () => {\n        if (currentGuess == \"\") {\n            // have this be a bar with character height\n            return (\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        const r = currentGuess.split('').map((c) => (\n            <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            {c[0].toUpperCase()}\n                        </div>    \n                    </div>\n\n        ))\n\n        var filler = 5 - r.length\n\n        for (var i = 0; i < filler; i++) {\n            r.push(\n                <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                    <div className=\"content\">\n                        \n                    </div>    \n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {r}\n            </div>\n        )\n    }\n\n    const renderKeyBoard = () => {\n        const t = kbTop.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        toggleIssue(false)\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const m = kbMid.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        const b = kbBot.map((k) => (\n            (rightLetters.indexOf(k) != -1) ? (\n                <div \n                    className=\"wordleLetter\"  \n                    style={{backgroundColor: \"green\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"green\"}}\n                    onClick={() => {\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n                        if (currentGuess.length < 5) {\n                            \n                            setGuess(currentGuess+k)\n                        }\n                    }}    \n                >\n                    {k.toUpperCase()}\n                </div>\n            ) : (\n                (missedLetters.indexOf(k) != -1) ? (\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"#cdab4b\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\", borderColor: \"#cdab4b\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (!started) {\n                                toggleStarted(true)\n                            }\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            if (currentGuess.length < 5) {\n                                \n                                setGuess(currentGuess+k)\n                            }\n                        }}  \n                    >\n                        {k.toUpperCase()}\n                    </div>\n                ) : (\n                    (wrongLetters.indexOf(k) != -1) ? (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"black\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    ) : (\n                        <div \n                            className=\"wordleLetter\"  \n                            style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}\n                            onClick={() => {\n                                toggleIssue(false)\n                                if (!started) {\n                                    toggleStarted(true)\n                                }\n                                if (win || guessCount >=6) {\n                                    resetGame()\n                                }\n                                if (currentGuess.length < 5) {\n                                    \n                                    setGuess(currentGuess+k)\n                                }\n                            }}  \n                        >\n                            {k.toUpperCase()}\n                        </div>\n                    )\n                )\n            )\n        ))\n\n        return (\n            <div>\n                <div className=\"flexbox\">{t}</div>\n                <div className=\"flexbox\">{m}</div>\n                {/* add the backspace and enter keys in bottom row */}\n                <div className=\"flexbox\">\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            if (guessCount <= 5 && win == false) {\n                                // submitGuess(currentGuess.toLowerCase())\n                                setGuess(\"\")\n                                \n                            } else {\n                                resetGame()\n                            }\n                        }}  \n                    >\n                        Clear\n                    </div>\n                    {b}\n                    <div \n                        className=\"wordleLetter\"  \n                        style={{backgroundColor: \"gray\", display: \"inline-block\", padding: \"1px\", margin: \"1px\", width: \"auto\"}}\n                        onClick={() => {\n                            toggleIssue(false)\n                            setGuess(currentGuess.substr(0,currentGuess.length -1 ))\n                        }}  \n                    >\n                        Delete\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const renderWorkspace = () => {\n        var guessesTaken = renderGuesses().length\n        var rowsLeft = 5 - guessesTaken\n\n        var rows = []\n\n        for (var i = 0; i < rowsLeft; i++) {\n            rows.push(\n                <div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                    <div className=\"square\" style={{display: \"inline-block\", padding: \"1px\", margin: \"1px\", fontWeight: \"bold\"}}>\n                        <div className=\"content\">\n                            \n                        </div>    \n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <div>\n                    {renderGuesses()}\n                </div>\n                {/* <div style={{display: \"block\", width: \"100%\", height: \"3px\"}}/> */}\n                {(guessCount < 6) ? (\n                    <div>\n                        {renderCurrent()}\n                    </div>\n                ) : (\n                    null\n                )}\n                \n                <div>\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"testLanding\" style={{height: \"auto\"}}>\n            <div style={{width: \"100%\", maxWidth: \"750px\"}}>\n                {(devTools == 3) ? (\n                    <div  \n                        onClick={() => {\n                            toggleHardReset(hardReset + 1)\n                            if (hardReset == 2) {\n                                document.cookie= \"k2wsr=0,0\"\n                                setWinCount(parseInt(0))\n                                setWinStreak(parseInt(0))\n                                toggleHardReset(0)\n                            }\n                        }} \n                        style={{position: \"absolute\", backgroundColor: \"red\", top: \"0px\", right: \"0px\"}}\n                    >\n                        w: {windowDimensions.width}, h: {windowDimensions.height}\n                    </div>\n                    \n                ) : (\n                    null\n                )}\n\n                {(devTools == 3) ? (\n                    <div style={{position: \"absolute\", top: \"0px\", left: \"0px\"}}>\n                    <input\n                        \n                        onChange={(e) => {\n                            if (!isNaN(e.target.value)) {\n                                submitSeed(parseInt(e.target.value))\n                            } else {\n                                console.log(\"invalid\")\n                            }\n                        }}\n                    />\n                    <button\n                        onClick={() => {\n                            setSeed(tempSeed)\n                            toggleDev(0)\n                            submitSeed(0)\n                        }}\n                    >Set Seed</button>\n                    </div>\n                ) : (\n                    null\n                )}\n\n                {(windowDimensions.width > 800) ? (\n                    <div style={{width: '100%'}}>\n                        <div style={{display: \"inline-block\", width: \"60%\", marginLeft: \"20%\", fontWeight: 'bold', fontSize: \"48px\"}}>\n                            Wordle Sim\n                        </div>\n                        \n                        <div style={{display: \"inline-block\", fontSize: \"24px\", width: \"20%\", textAlign: \"left\", justifyContent:'left'}}>\n                            <div>\n                                Wins: {winCount}\n                            </div>\n                            <div>\n                                Winstreak: {winStreak}\n                            </div>\n                        </div>\n                    </div>  \n                ) : (\n                    <div style={{width: '100%'}}>\n                        <div style={{display: \"inline-block\", width: \"48%\", marginLeft: \"26%\", fontWeight: 'bold', fontSize: \"30px\"}}>\n                            Wordle Sim\n                        </div>\n                        \n                        <div style={{display: \"inline-block\", fontSize: \"15px\", width: \"26%\", textAlign: \"left\", justifyContent:'left'}}>\n                            <div>\n                                Wins: {winCount}\n                            </div>\n                            <div>\n                                Winstreak: {winStreak}\n                            </div>\n                        </div>\n                    </div> \n                )}\n\n                \n\n                {/* Wordle sim\n                <br/> */}\n\n                \n                \n\n                <br/>\n\n                <div>\n                    {renderWorkspace()}\n                </div>\n                \n                {(win && seed.toString().length < 5) ? (\n                    <div>\n                        <div>\n                            {(totalTime)/1000}s, Seed: {seed}\n                        </div>\n                        <div className=\"links\" onClick={() => {\n                                navigator.clipboard.writeText(`Solved this wordle-like game in ${totalTime} seconds. See if you can do better\\n${urlData.split(\"wordle\")[0]}wordle/${seed}`)}\n                            }>\n                            Copy to Clipboard\n                        </div>\n                    </div>\n                ) : (\n                    ((showWord || devTools == 3) && seed.toString().length < 5) ? (\n                        <div>\n                            <div>\n                                Seed: {seed}\n                            </div>\n                            <div className=\"links\" onClick={() => {\n                                    navigator.clipboard.writeText(`This word is a tough one. See if you can solve it\\n${urlData.split(\"wordle\")[0]}wordle/${seed}`)}\n                                }>\n                                Copy to Clipboard\n                            </div>\n                        </div>\n                    ) : (\n                        (showIssue && seed.toString().length < 5) ? (\n                            <div>{issue}</div>\n                        ) : (\n                            null\n                            )\n                        )\n                )}\n\n                {(win && seed.toString().length >= 5) ? (\n                    <div>\n                        {(totalTime)/1000}s\n                    </div>\n                ) : (\n                    ((showWord || devTools == 3) && seed.toString().length >= 5) ? (\n                        <div>{currentWord}</div>\n                    ) : (\n                        (showIssue && seed.toString().length >= 5) ? (\n                            <div>{issue}</div>\n                        ) : (\n                            null\n                            )\n                        )\n                )}\n\n                <br/>\n                <div className=\"flexbox\">\n                <input\n                    className=\"ctButton\"\n                    style={{marginLeft: \"5%\", marginRight: \"5%\",marginTop:\"0\", float: \"left\", border: \"none\", backgroundColor: \"white\", color: \"black\", padding: \"12px\", width: \"30%\", justifyContent: \"center\"}}\n                    \n                    value={currentGuess}\n                    onChange={(e)=>{\n                        toggleIssue(false)\n                        if (!started) {\n                            toggleStarted(true)\n                        }\n                        if (win || guessCount >=6) {\n                            resetGame()\n                        }\n\n                        var temp = e.target.value.substr(0,5)\n\n\n                        setGuess(temp)\n\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            if (win || guessCount >=6) {\n                                resetGame()\n                            }\n                            submitGuess(currentGuess.toLowerCase())\n                        }\n                    }}\n                />\n            \n                {(win) ? (\n                    <button \n                        onClick={() => {\n                            resetGame()\n                        }}\n                        className=\"wordleButton\"\n                        style={{padding: \"11px\", marginRight: \"5%\", width: \"60%\"}}\n                    >\n                        Continue\n                    </button>\n                ) : (\n                    <div style={{display: \"inline\", marginRight: \"5%\", width: \"60%\"}}>\n                        <button \n                            className=\"wordleButton\"\n                            style={{padding: \"11px\", width: \"40%\", marginRight: \"5%\"}}\n                            onClick={() => {\n                                if (guessCount <= 5 && win == false) {\n                                    submitGuess(currentGuess.toLowerCase())\n                                    \n                                } else {\n                                    resetGame()\n                                }\n                            \n                        }}>\n                            Submit\n                        </button>\n                        <button \n                            onClick={() => {\n                                if (guessCount == 0){\n                                    if (devTools == 3) {\n                                        toggleDev(0)\n                                    } else {\n                                        toggleDev(devTools + 1)\n                                    }\n                                } else {\n                                    toggleDev(0)\n                                }\n                                resetGame()\n                                toggleStarted(false)\n                                if (!win) {\n                                    setWinStreak(0)\n                                    if (guessCount <= 5) {\n                                        setSeed(Math.floor(Math.random() * 10000))\n                                    }\n                                }\n\n                                \n                            }}\n                            className=\"wordleReset\"\n                            style={{padding: \"11px\", width: \"40%\"}}\n                        >\n                            Reset\n                        </button>\n                    </div>\n                )}\n                \n                </div>\n\n                <br/>\n                <div>\n                    {renderKeyBoard()}\n                </div>\n                <br/>\n                <div>\n                    <a href='/' className=\"wordleButton\">Return to the main page</a>\n                </div>\n\n                <br/>\n            </div>\n        </div>\n    )\n}\n\nexport default Wordle;",{"ruleId":"201","severity":1,"message":"202","line":8,"column":20,"nodeType":"203","messageId":"204","endLine":8,"endColumn":26},{"ruleId":"201","severity":1,"message":"205","line":9,"column":3,"nodeType":"203","messageId":"204","endLine":9,"endColumn":9},{"ruleId":"201","severity":1,"message":"206","line":10,"column":3,"nodeType":"203","messageId":"204","endLine":10,"endColumn":8},{"ruleId":"201","severity":1,"message":"207","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":7},{"ruleId":"201","severity":1,"message":"208","line":12,"column":3,"nodeType":"203","messageId":"204","endLine":12,"endColumn":13},{"ruleId":"201","severity":1,"message":"209","line":2,"column":3,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"210","line":4,"column":3,"nodeType":"203","messageId":"204","endLine":4,"endColumn":9},{"ruleId":"201","severity":1,"message":"202","line":8,"column":20,"nodeType":"203","messageId":"204","endLine":8,"endColumn":26},{"ruleId":"201","severity":1,"message":"207","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":7},{"ruleId":"201","severity":1,"message":"208","line":12,"column":3,"nodeType":"203","messageId":"204","endLine":12,"endColumn":13},{"ruleId":"201","severity":1,"message":"211","line":13,"column":3,"nodeType":"203","messageId":"204","endLine":13,"endColumn":13},{"ruleId":"201","severity":1,"message":"212","line":17,"column":8,"nodeType":"203","messageId":"204","endLine":17,"endColumn":19},{"ruleId":"201","severity":1,"message":"213","line":26,"column":8,"nodeType":"203","messageId":"204","endLine":26,"endColumn":16},{"ruleId":"201","severity":1,"message":"214","line":58,"column":9,"nodeType":"203","messageId":"204","endLine":58,"endColumn":23},{"ruleId":"201","severity":1,"message":"215","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":19},{"ruleId":"201","severity":1,"message":"216","line":3,"column":16,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"217","line":3,"column":24,"nodeType":"203","messageId":"204","endLine":3,"endColumn":31},{"ruleId":"201","severity":1,"message":"218","line":3,"column":33,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"219","line":3,"column":58,"nodeType":"203","messageId":"204","endLine":3,"endColumn":64},{"ruleId":"201","severity":1,"message":"220","line":3,"column":66,"nodeType":"203","messageId":"204","endLine":3,"endColumn":75},{"ruleId":"201","severity":1,"message":"221","line":3,"column":77,"nodeType":"203","messageId":"204","endLine":3,"endColumn":85},{"ruleId":"222","severity":1,"message":"223","line":29,"column":33,"nodeType":"224","endLine":29,"endColumn":97},{"ruleId":"222","severity":1,"message":"223","line":39,"column":41,"nodeType":"224","endLine":44,"endColumn":42},{"ruleId":"201","severity":1,"message":"209","line":4,"column":5,"nodeType":"203","messageId":"204","endLine":4,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":5,"column":5,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"210","line":6,"column":5,"nodeType":"203","messageId":"204","endLine":6,"endColumn":11},{"ruleId":"201","severity":1,"message":"226","line":7,"column":5,"nodeType":"203","messageId":"204","endLine":7,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":79,"column":33,"nodeType":"224","messageId":"229","endLine":79,"endColumn":169,"fix":"230"},{"ruleId":"231","severity":1,"message":"232","line":100,"column":29,"nodeType":"224","endLine":100,"endColumn":128},{"ruleId":"227","severity":1,"message":"228","line":132,"column":36,"nodeType":"224","messageId":"229","endLine":132,"endColumn":172,"fix":"233"},{"ruleId":"201","severity":1,"message":"216","line":4,"column":16,"nodeType":"203","messageId":"204","endLine":4,"endColumn":22},{"ruleId":"201","severity":1,"message":"217","line":4,"column":24,"nodeType":"203","messageId":"204","endLine":4,"endColumn":31},{"ruleId":"201","severity":1,"message":"218","line":4,"column":33,"nodeType":"203","messageId":"204","endLine":4,"endColumn":39},{"ruleId":"201","severity":1,"message":"219","line":4,"column":58,"nodeType":"203","messageId":"204","endLine":4,"endColumn":64},{"ruleId":"201","severity":1,"message":"220","line":4,"column":66,"nodeType":"203","messageId":"204","endLine":4,"endColumn":75},{"ruleId":"201","severity":1,"message":"221","line":4,"column":77,"nodeType":"203","messageId":"204","endLine":4,"endColumn":85},{"ruleId":"201","severity":1,"message":"209","line":4,"column":5,"nodeType":"203","messageId":"204","endLine":4,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":5,"column":5,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"210","line":6,"column":5,"nodeType":"203","messageId":"204","endLine":6,"endColumn":11},{"ruleId":"201","severity":1,"message":"226","line":7,"column":5,"nodeType":"203","messageId":"204","endLine":7,"endColumn":15},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"216","line":2,"column":16,"nodeType":"203","messageId":"204","endLine":2,"endColumn":22},{"ruleId":"201","severity":1,"message":"217","line":2,"column":24,"nodeType":"203","messageId":"204","endLine":2,"endColumn":31},{"ruleId":"201","severity":1,"message":"218","line":2,"column":33,"nodeType":"203","messageId":"204","endLine":2,"endColumn":39},{"ruleId":"201","severity":1,"message":"219","line":2,"column":58,"nodeType":"203","messageId":"204","endLine":2,"endColumn":64},{"ruleId":"201","severity":1,"message":"220","line":2,"column":66,"nodeType":"203","messageId":"204","endLine":2,"endColumn":75},{"ruleId":"201","severity":1,"message":"221","line":2,"column":77,"nodeType":"203","messageId":"204","endLine":2,"endColumn":85},{"ruleId":"201","severity":1,"message":"215","line":3,"column":9,"nodeType":"203","messageId":"204","endLine":3,"endColumn":18},{"ruleId":"201","severity":1,"message":"209","line":4,"column":5,"nodeType":"203","messageId":"204","endLine":4,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":5,"column":5,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"210","line":6,"column":5,"nodeType":"203","messageId":"204","endLine":6,"endColumn":11},{"ruleId":"201","severity":1,"message":"226","line":7,"column":5,"nodeType":"203","messageId":"204","endLine":7,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":67,"column":33,"nodeType":"224","endLine":67,"endColumn":116},{"ruleId":"227","severity":1,"message":"228","line":81,"column":29,"nodeType":"224","messageId":"229","endLine":81,"endColumn":103,"fix":"234"},{"ruleId":"231","severity":1,"message":"232","line":87,"column":33,"nodeType":"224","endLine":87,"endColumn":139},{"ruleId":"227","severity":1,"message":"228","line":100,"column":29,"nodeType":"224","messageId":"229","endLine":100,"endColumn":107,"fix":"235"},{"ruleId":"231","severity":1,"message":"232","line":106,"column":33,"nodeType":"224","endLine":106,"endColumn":119},{"ruleId":"227","severity":1,"message":"228","line":118,"column":29,"nodeType":"224","messageId":"229","endLine":118,"endColumn":108,"fix":"236"},{"ruleId":"231","severity":1,"message":"232","line":130,"column":33,"nodeType":"224","endLine":130,"endColumn":118},{"ruleId":"227","severity":1,"message":"228","line":142,"column":29,"nodeType":"224","messageId":"229","endLine":142,"endColumn":122,"fix":"237"},{"ruleId":"231","severity":1,"message":"232","line":148,"column":33,"nodeType":"224","endLine":148,"endColumn":115},{"ruleId":"227","severity":1,"message":"228","line":160,"column":29,"nodeType":"224","messageId":"229","endLine":160,"endColumn":123,"fix":"238"},{"ruleId":"227","severity":1,"message":"228","line":173,"column":29,"nodeType":"224","messageId":"229","endLine":173,"endColumn":179,"fix":"239"},{"ruleId":"227","severity":1,"message":"228","line":185,"column":29,"nodeType":"224","messageId":"229","endLine":185,"endColumn":179,"fix":"240"},{"ruleId":"231","severity":1,"message":"232","line":198,"column":33,"nodeType":"224","endLine":198,"endColumn":123},{"ruleId":"231","severity":1,"message":"232","line":216,"column":33,"nodeType":"224","endLine":216,"endColumn":121},{"ruleId":"231","severity":1,"message":"232","line":251,"column":33,"nodeType":"224","endLine":251,"endColumn":89},{"ruleId":"227","severity":1,"message":"228","line":265,"column":29,"nodeType":"224","messageId":"229","endLine":265,"endColumn":103,"fix":"241"},{"ruleId":"231","severity":1,"message":"232","line":271,"column":33,"nodeType":"224","endLine":271,"endColumn":112},{"ruleId":"227","severity":1,"message":"228","line":284,"column":29,"nodeType":"224","messageId":"229","endLine":284,"endColumn":107,"fix":"242"},{"ruleId":"231","severity":1,"message":"232","line":290,"column":33,"nodeType":"224","endLine":290,"endColumn":118},{"ruleId":"227","severity":1,"message":"228","line":302,"column":29,"nodeType":"224","messageId":"229","endLine":302,"endColumn":108,"fix":"243"},{"ruleId":"231","severity":1,"message":"232","line":314,"column":33,"nodeType":"224","endLine":314,"endColumn":117},{"ruleId":"227","severity":1,"message":"228","line":326,"column":29,"nodeType":"224","messageId":"229","endLine":326,"endColumn":122,"fix":"244"},{"ruleId":"231","severity":1,"message":"232","line":332,"column":33,"nodeType":"224","endLine":332,"endColumn":114},{"ruleId":"227","severity":1,"message":"228","line":344,"column":29,"nodeType":"224","messageId":"229","endLine":344,"endColumn":123,"fix":"245"},{"ruleId":"227","severity":1,"message":"228","line":357,"column":29,"nodeType":"224","messageId":"229","endLine":357,"endColumn":179,"fix":"246"},{"ruleId":"227","severity":1,"message":"228","line":369,"column":29,"nodeType":"224","messageId":"229","endLine":369,"endColumn":179,"fix":"247"},{"ruleId":"231","severity":1,"message":"232","line":381,"column":33,"nodeType":"224","endLine":381,"endColumn":96},{"ruleId":"231","severity":1,"message":"232","line":399,"column":33,"nodeType":"224","endLine":399,"endColumn":94},{"ruleId":"248","severity":1,"message":"249","line":21,"column":29,"nodeType":"250","messageId":"251","endLine":21,"endColumn":31},{"ruleId":"201","severity":1,"message":"216","line":2,"column":16,"nodeType":"203","messageId":"204","endLine":2,"endColumn":22},{"ruleId":"201","severity":1,"message":"217","line":2,"column":24,"nodeType":"203","messageId":"204","endLine":2,"endColumn":31},{"ruleId":"201","severity":1,"message":"218","line":2,"column":33,"nodeType":"203","messageId":"204","endLine":2,"endColumn":39},{"ruleId":"201","severity":1,"message":"219","line":2,"column":58,"nodeType":"203","messageId":"204","endLine":2,"endColumn":64},{"ruleId":"201","severity":1,"message":"220","line":2,"column":66,"nodeType":"203","messageId":"204","endLine":2,"endColumn":75},{"ruleId":"201","severity":1,"message":"221","line":2,"column":77,"nodeType":"203","messageId":"204","endLine":2,"endColumn":85},{"ruleId":"201","severity":1,"message":"252","line":20,"column":12,"nodeType":"203","messageId":"204","endLine":20,"endColumn":22},{"ruleId":"248","severity":1,"message":"253","line":38,"column":24,"nodeType":"250","messageId":"251","endLine":38,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":74,"column":33,"nodeType":"250","messageId":"251","endLine":74,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":87,"column":38,"nodeType":"250","messageId":"251","endLine":87,"endColumn":40},{"ruleId":"231","severity":1,"message":"232","line":95,"column":21,"nodeType":"224","endLine":95,"endColumn":114},{"ruleId":"248","severity":1,"message":"249","line":104,"column":40,"nodeType":"250","messageId":"251","endLine":104,"endColumn":42},{"ruleId":"248","severity":1,"message":"249","line":116,"column":38,"nodeType":"250","messageId":"251","endLine":116,"endColumn":40},{"ruleId":"231","severity":1,"message":"232","line":124,"column":21,"nodeType":"224","endLine":124,"endColumn":114},{"ruleId":"248","severity":1,"message":"249","line":149,"column":38,"nodeType":"250","messageId":"251","endLine":149,"endColumn":40},{"ruleId":"231","severity":1,"message":"232","line":158,"column":21,"nodeType":"224","endLine":158,"endColumn":114},{"ruleId":"248","severity":1,"message":"249","line":207,"column":22,"nodeType":"250","messageId":"251","endLine":207,"endColumn":24},{"ruleId":"248","severity":1,"message":"253","line":219,"column":25,"nodeType":"250","messageId":"251","endLine":219,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":261,"column":26,"nodeType":"250","messageId":"251","endLine":261,"endColumn":28},{"ruleId":"231","severity":1,"message":"232","line":300,"column":33,"nodeType":"224","endLine":300,"endColumn":158},{"ruleId":"231","severity":1,"message":"232","line":406,"column":33,"nodeType":"224","endLine":406,"endColumn":157},{"ruleId":"201","severity":1,"message":"254","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":13},{"ruleId":"201","severity":1,"message":"255","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":10},{"ruleId":"201","severity":1,"message":"256","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":18},{"ruleId":"201","severity":1,"message":"257","line":6,"column":20,"nodeType":"203","messageId":"204","endLine":6,"endColumn":29},{"ruleId":"258","severity":1,"message":"259","line":111,"column":23,"nodeType":"260","endLine":111,"endColumn":43},{"ruleId":"258","severity":1,"message":"261","line":145,"column":8,"nodeType":"262","endLine":145,"endColumn":18,"suggestions":"263"},{"ruleId":"258","severity":1,"message":"264","line":150,"column":8,"nodeType":"262","endLine":150,"endColumn":14,"suggestions":"265"},{"ruleId":"258","severity":1,"message":"266","line":154,"column":8,"nodeType":"262","endLine":154,"endColumn":18,"suggestions":"267"},{"ruleId":"248","severity":1,"message":"253","line":157,"column":22,"nodeType":"250","messageId":"251","endLine":157,"endColumn":24},{"ruleId":"258","severity":1,"message":"268","line":179,"column":8,"nodeType":"262","endLine":179,"endColumn":17,"suggestions":"269"},{"ruleId":"201","severity":1,"message":"270","line":182,"column":13,"nodeType":"203","messageId":"204","endLine":182,"endColumn":17},{"ruleId":"248","severity":1,"message":"253","line":222,"column":36,"nodeType":"250","messageId":"251","endLine":222,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":238,"column":30,"nodeType":"250","messageId":"251","endLine":238,"endColumn":32},{"ruleId":"248","severity":1,"message":"253","line":244,"column":25,"nodeType":"250","messageId":"251","endLine":244,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":248,"column":25,"nodeType":"250","messageId":"251","endLine":248,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":254,"column":25,"nodeType":"250","messageId":"251","endLine":254,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":260,"column":25,"nodeType":"250","messageId":"251","endLine":260,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":298,"column":33,"nodeType":"250","messageId":"251","endLine":298,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":316,"column":19,"nodeType":"250","messageId":"251","endLine":316,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":323,"column":23,"nodeType":"250","messageId":"251","endLine":323,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":330,"column":27,"nodeType":"250","messageId":"251","endLine":330,"endColumn":29},{"ruleId":"248","severity":1,"message":"249","line":348,"column":26,"nodeType":"250","messageId":"251","endLine":348,"endColumn":28},{"ruleId":"248","severity":1,"message":"253","line":411,"column":38,"nodeType":"250","messageId":"251","endLine":411,"endColumn":40},{"ruleId":"248","severity":1,"message":"253","line":432,"column":43,"nodeType":"250","messageId":"251","endLine":432,"endColumn":45},{"ruleId":"248","severity":1,"message":"253","line":452,"column":46,"nodeType":"250","messageId":"251","endLine":452,"endColumn":48},{"ruleId":"248","severity":1,"message":"253","line":498,"column":38,"nodeType":"250","messageId":"251","endLine":498,"endColumn":40},{"ruleId":"248","severity":1,"message":"253","line":519,"column":43,"nodeType":"250","messageId":"251","endLine":519,"endColumn":45},{"ruleId":"248","severity":1,"message":"253","line":540,"column":46,"nodeType":"250","messageId":"251","endLine":540,"endColumn":48},{"ruleId":"248","severity":1,"message":"253","line":586,"column":38,"nodeType":"250","messageId":"251","endLine":586,"endColumn":40},{"ruleId":"248","severity":1,"message":"253","line":607,"column":43,"nodeType":"250","messageId":"251","endLine":607,"endColumn":45},{"ruleId":"248","severity":1,"message":"253","line":628,"column":46,"nodeType":"250","messageId":"251","endLine":628,"endColumn":48},{"ruleId":"248","severity":1,"message":"249","line":684,"column":56,"nodeType":"250","messageId":"251","endLine":684,"endColumn":58},{"ruleId":"248","severity":1,"message":"249","line":773,"column":28,"nodeType":"250","messageId":"251","endLine":773,"endColumn":30},{"ruleId":"248","severity":1,"message":"249","line":777,"column":43,"nodeType":"250","messageId":"251","endLine":777,"endColumn":45},{"ruleId":"248","severity":1,"message":"249","line":793,"column":28,"nodeType":"250","messageId":"251","endLine":793,"endColumn":30},{"ruleId":"248","severity":1,"message":"249","line":875,"column":44,"nodeType":"250","messageId":"251","endLine":875,"endColumn":46},{"ruleId":"248","severity":1,"message":"249","line":900,"column":44,"nodeType":"250","messageId":"251","endLine":900,"endColumn":46},{"ruleId":"248","severity":1,"message":"249","line":959,"column":60,"nodeType":"250","messageId":"251","endLine":959,"endColumn":62},{"ruleId":"248","severity":1,"message":"249","line":971,"column":48,"nodeType":"250","messageId":"251","endLine":971,"endColumn":50},{"ruleId":"248","severity":1,"message":"249","line":972,"column":50,"nodeType":"250","messageId":"251","endLine":972,"endColumn":52},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'HideBetween' is defined but never used.","'HideOn' is defined but never used.","'HashRouter' is defined but never used.","'ParticlesBg' is defined but never used.","'SkillBar' is defined but never used.","'testComponents' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Element' is defined but never used.","'Events' is defined but never used.","'scroll' is defined but never used.","'scrollSpy' is defined but never used.","'scroller' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'HideDuring' is defined but never used.","'HideScroll' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"271","text":"272"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"273","text":"272"},{"range":"274","text":"272"},{"range":"275","text":"272"},{"range":"276","text":"272"},{"range":"277","text":"272"},{"range":"278","text":"272"},{"range":"279","text":"272"},{"range":"280","text":"272"},{"range":"281","text":"272"},{"range":"282","text":"272"},{"range":"283","text":"272"},{"range":"284","text":"272"},{"range":"285","text":"272"},{"range":"286","text":"272"},{"range":"287","text":"272"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'listLength' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'axios' is defined but never used.","'rs' is defined but never used.","'Navigate' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'urlData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'parsedSeed'. Either include it or remove the dependency array.","ArrayExpression",["288"],"React Hook useEffect has missing dependencies: 'gen' and 'wordBank.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setWordSeed' needs the current value of 'wordBank.length'.",["289"],"React Hook useEffect has a missing dependency: 'generateWord'. Either include it or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'startTime' and 'win'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalTime' needs the current value of 'startTime'.",["291"],"'rand' is assigned a value but never used.",[3514,3514]," rel=\"noreferrer\"",[6254,6254],[3128,3128],[4396,4396],[5554,5554],[7058,7058],[8251,8251],[9191,9191],[10067,10067],[14584,14584],[15839,15839],[17010,17010],[18493,18493],[19675,19675],[20610,20610],[21481,21481],{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [parsedSeed, wordBank]",{"range":"300","text":"301"},"Update the dependencies array to be: [gen, seed, wordBank.length]",{"range":"302","text":"303"},"Update the dependencies array to be: [generateWord, wordSeed]",{"range":"304","text":"305"},"Update the dependencies array to be: [endTime, startTime, win]",{"range":"306","text":"307"},[4184,4194],"[parsedSeed, wordBank]",[4312,4318],"[gen, seed, wordBank.length]",[4373,4383],"[generateWord, wordSeed]",[4943,4952],"[endTime, startTime, win]"]